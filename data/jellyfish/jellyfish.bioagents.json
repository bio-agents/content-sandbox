{
    "additionDate": "2017-01-13T13:15:10Z",
    "bioagentsCURIE": "bioagents:jellyfish",
    "bioagentsID": "jellyfish",
    "collectionID": [
        "Animal and Crop Genomics"
    ],
    "credit": [
        {
            "email": "carlk@cs.cmu.edu",
            "name": "Carl Kingsford",
            "typeEntity": "Person",
            "typeRole": [
                "Primary contact"
            ]
        },
        {
            "email": "gmarcais@umd.edu",
            "name": "Guillaume Marçais",
            "typeEntity": "Person",
            "typeRole": [
                "Primary contact"
            ]
        }
    ],
    "description": "A command-line algorithm for counting k-mers in DNA sequence.",
    "documentation": [
        {
            "type": [
                "General"
            ],
            "url": "https://github.com/gmarcais/Jellyfish/tree/develop/swig"
        },
        {
            "type": [
                "User manual"
            ],
            "url": "http://www.genome.umd.edu/docs/JellyfishUserGuide.pdf"
        }
    ],
    "editPermission": {
        "authors": [
            "IECHOR-EE",
            "animalandcropgenomics"
        ],
        "type": "group"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "k-mer counting",
                    "uri": "http://edamontology.org/operation_3472"
                }
            ]
        }
    ],
    "homepage": "http://www.genome.umd.edu/jellyfish.html",
    "language": [
        "C++",
        "Perl",
        "Python",
        "Ruby"
    ],
    "lastUpdate": "2019-01-29T12:07:17Z",
    "license": "GPL-3.0",
    "name": "Jellyfish",
    "operatingSystem": [
        "Linux",
        "Mac"
    ],
    "owner": "seqwiki_import",
    "publication": [
        {
            "metadata": {
                "abstract": "Motivation: Counting the number of occurrences of every k-mer (substring of length k) in a long string is a central subproblem in many applications, including genome assembly, error correction of sequencing reads, fast multiple sequence alignment and repeat detection. Recently, the deep sequence coverage generated by next-generation sequencing technologies has caused the amount of sequence to be processed during a genome project to grow rapidly, and has rendered current k-mer counting agents too slow and memory intensive. At the same time, large multicore computers have become commonplace in research facilities allowing for a new parallel computational paradigm. Results: We propose a new k-mer counting algorithm and associated implementation, called Jellyfish, which is fast and memory efficient. It is based on a multithreaded, lock-free hash table optimized for counting k-mers up to 31 bases in length. Due to their flexibility, suffix arrays have been the data structure of choice for solving many string problems. For the task of k-mer counting, important in many biological applications, Jellyfish offers a much faster and more memory-efficient solution. © The Author 2011. Published by Oxford University Press. All rights reserved.",
                "authors": [
                    {
                        "name": "Kingsford C."
                    },
                    {
                        "name": "Marcais G."
                    }
                ],
                "citationCount": 1262,
                "date": "2011-03-01T00:00:00Z",
                "journal": "Bioinformatics",
                "title": "A fast, lock-free approach for efficient parallel counting of occurrences of k-mers"
            },
            "pmid": "21217122"
        }
    ],
    "agentType": [
        "Command-line agent"
    ],
    "topic": [
        {
            "term": "Genomics",
            "uri": "http://edamontology.org/topic_0622"
        },
        {
            "term": "Sequence analysis",
            "uri": "http://edamontology.org/topic_0080"
        }
    ],
    "validated": 1,
    "version": [
        "2.0"
    ]
}
