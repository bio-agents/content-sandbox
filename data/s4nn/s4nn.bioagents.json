{
    "additionDate": "2021-01-18T09:21:25Z",
    "bioagentsCURIE": "bioagents:s4nn",
    "bioagentsID": "s4nn",
    "confidence_flag": "agent",
    "credit": [
        {
            "name": "Saeed Reza Kheradpisheh",
            "typeEntity": "Person"
        }
    ],
    "description": "Temporal Backpropagation for Spiking Neural Networks with One Spike per Neuron.",
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Neurite measurement",
                    "uri": "http://edamontology.org/operation_3450"
                },
                {
                    "term": "Sorting",
                    "uri": "http://edamontology.org/operation_3802"
                }
            ]
        }
    ],
    "homepage": "https://github.com/SRKH/S4NN",
    "language": [
        "Python"
    ],
    "lastUpdate": "2021-02-10T14:00:02Z",
    "license": "GPL-3.0",
    "name": "S4NN",
    "owner": "zsmag19",
    "publication": [
        {
            "doi": "10.1142/S0129065720500276",
            "metadata": {
                "abstract": "Â© 2020 World Scientific Publishing Company.We propose a new supervised learning rule for multilayer spiking neural networks (SNNs) that use a form of temporal coding known as rank-order-coding. With this coding scheme, all neurons fire exactly one spike per stimulus, but the firing order carries information. In particular, in the readout layer, the first neuron to fire determines the class of the stimulus. We derive a new learning rule for this sort of network, named S4NN, akin to traditional error backpropagation, yet based on latencies. We show how approximated error gradients can be computed backward in a feedforward network with any number of layers. This approach reaches state-of-the-art performance with supervised multi-fully connected layer SNNs: test accuracy of 97.4% for the MNIST dataset, and 99.2% for the Caltech Face/Motorbike dataset. Yet, the neuron model that we use, nonleaky integrate-and-fire, is much simpler than the one used in all previous works. The source codes of the proposed S4NN are publicly available at https://github.com/SRKH/S4NN.",
                "authors": [
                    {
                        "name": "Kheradpisheh S.R."
                    },
                    {
                        "name": "Masquelier T."
                    }
                ],
                "citationCount": 14,
                "date": "2020-06-01T00:00:00Z",
                "journal": "International Journal of Neural Systems",
                "title": "Temporal Backpropagation for Spiking Neural Networks with One Spike per Neuron"
            },
            "pmid": "32466691"
        }
    ],
    "topic": [
        {
            "term": "Human biology",
            "uri": "http://edamontology.org/topic_2815"
        },
        {
            "term": "Machine learning",
            "uri": "http://edamontology.org/topic_3474"
        },
        {
            "term": "Neurology",
            "uri": "http://edamontology.org/topic_3334"
        }
    ]
}
