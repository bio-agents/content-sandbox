{
    "additionDate": "2019-11-14T20:02:40Z",
    "bioagentsCURIE": "bioagents:PowerShell",
    "bioagentsID": "PowerShell",
    "confidence_flag": "agent",
    "description": "Using the Object-Oriented PowerShell for Simple Proteomics Data Analysis | Scripting languages such as Python and Bash are appreciated for solving simple, everyday tasks in bioinformatics",
    "editPermission": {
        "type": "public"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Formatting",
                    "uri": "http://edamontology.org/operation_0335"
                },
                {
                    "term": "Parsing",
                    "uri": "http://edamontology.org/operation_1812"
                },
                {
                    "term": "Peptide identification",
                    "uri": "http://edamontology.org/operation_3631"
                }
            ]
        }
    ],
    "homepage": "https://cpm.lumc.nl/yassene/powershell/",
    "language": [
        "Bash",
        "Python",
        "Shell"
    ],
    "lastUpdate": "2020-12-05T13:42:47Z",
    "name": "PowerShell",
    "owner": "Pub2Agents",
    "publication": [
        {
            "doi": "10.1007/978-1-4939-9744-2_17",
            "metadata": {
                "abstract": "© Springer Science+Business Media, LLC, part of Springer Nature 2020.Scripting languages such as Python and Bash are appreciated for solving simple, everyday tasks in bioinformatics. A more recent, object-oriented command shell and scripting language, PowerShell, has many attractive features: an object-oriented interactive command line, fluent navigation and manipulation of XML files, ability to explore and consume Web services from the command line, consistent syntax and grammar, rich regular expressions, and advanced output formatting. The key difference between classical command shells and scripting languages, such as bash, and object-oriented ones, such as PowerShell, is that in the latter the result of a command is a structured object with inherited properties and methods rather than a simple stream of characters. Conveniently, PowerShell is included in all new releases of Microsoft Windows and is available for Linux and macOS, making any data processing script portable. In this chapter we demonstrate how PowerShell in particular allows easy interaction with mass spectrometry data in XML formats, connection to Web services for agents such as BLAST, and presentation of results as formatted text or graphics. These features make PowerShell much more than “yet another scripting language.”.",
                "authors": [
                    {
                        "name": "Mohammed Y."
                    },
                    {
                        "name": "Palmblad M."
                    }
                ],
                "citationCount": 2,
                "date": "2020-01-01T00:00:00Z",
                "journal": "Methods in Molecular Biology",
                "title": "Using the object-oriented powershell for simple proteomics data analysis"
            },
            "pmid": "31552639"
        }
    ],
    "topic": [
        {
            "term": "Proteomics",
            "uri": "http://edamontology.org/topic_0121"
        },
        {
            "term": "Proteomics experiment",
            "uri": "http://edamontology.org/topic_3520"
        },
        {
            "term": "Small molecules",
            "uri": "http://edamontology.org/topic_0154"
        }
    ],
    "validated": 1
}
