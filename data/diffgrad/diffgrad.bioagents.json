{
    "additionDate": "2020-01-14T19:32:19Z",
    "bioagentsCURIE": "bioagents:diffGrad",
    "bioagentsID": "diffGrad",
    "confidence_flag": "agent",
    "description": "An Optimization Method for Convolutional Neural Networks.\n\nAbstract Stochastic Gradient Decent (SGD) is one of the core techniques behind the success of deep neural networks",
    "editPermission": {
        "type": "public"
    },
    "homepage": "https://github.com/shivram1987/diffGrad",
    "language": [
        "Python"
    ],
    "lastUpdate": "2020-12-22T07:10:47Z",
    "license": "MIT",
    "link": [
        {
            "type": [
                "Issue tracker"
            ],
            "url": "https://github.com/shivram1987/diffGrad/issues"
        }
    ],
    "name": "diffGrad",
    "owner": "Pub2Agents",
    "publication": [
        {
            "doi": "10.1109/TNNLS.2019.2955777",
            "metadata": {
                "abstract": "Â© 2012 IEEE.Stochastic gradient descent (SGD) is one of the core techniques behind the success of deep neural networks. The gradient provides information on the direction in which a function has the steepest rate of change. The main problem with basic SGD is to change by equal-sized steps for all parameters, irrespective of the gradient behavior. Hence, an efficient way of deep network optimization is to have adaptive step sizes for each parameter. Recently, several attempts have been made to improve gradient descent methods such as AdaGrad, AdaDelta, RMSProp, and adaptive moment estimation (Adam). These methods rely on the square roots of exponential moving averages of squared past gradients. Thus, these methods do not take advantage of local change in gradients. In this article, a novel optimizer is proposed based on the difference between the present and the immediate past gradient (i.e., diffGrad). In the proposed diffGrad optimization technique, the step size is adjusted for each parameter in such a way that it should have a larger step size for faster gradient changing parameters and a lower step size for lower gradient changing parameters. The convergence analysis is done using the regret bound approach of the online learning framework. In this article, thorough analysis is made over three synthetic complex nonconvex functions. The image categorization experiments are also conducted over the CIFAR10 and CIFAR100 data sets to observe the performance of diffGrad with respect to the state-of-the-art optimizers such as SGDM, AdaGrad, AdaDelta, RMSProp, AMSGrad, and Adam. The residual unit (ResNet)-based convolutional neural network (CNN) architecture is used in the experiments. The experiments show that diffGrad outperforms other optimizers. Also, we show that diffGrad performs uniformly well for training CNN using different activation functions. The source code is made publicly available at https://github.com/shivram1987/diffGrad.",
                "authors": [
                    {
                        "name": "Chakraborty S."
                    },
                    {
                        "name": "Chaudhuri B.B."
                    },
                    {
                        "name": "Dubey S.R."
                    },
                    {
                        "name": "Mukherjee S."
                    },
                    {
                        "name": "Roy S.K."
                    },
                    {
                        "name": "Singh S.K."
                    }
                ],
                "citationCount": 18,
                "date": "2020-11-01T00:00:00Z",
                "journal": "IEEE Transactions on Neural Networks and Learning Systems",
                "title": "DiffGrad: An Optimization Method for Convolutional Neural Networks"
            },
            "pmid": "31880565"
        }
    ],
    "topic": [
        {
            "term": "Imaging",
            "uri": "http://edamontology.org/topic_3382"
        },
        {
            "term": "Machine learning",
            "uri": "http://edamontology.org/topic_3474"
        },
        {
            "term": "Mathematics",
            "uri": "http://edamontology.org/topic_3315"
        }
    ],
    "validated": 1
}
