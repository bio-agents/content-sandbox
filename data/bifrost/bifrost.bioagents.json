{
    "additionDate": "2021-01-18T10:56:51Z",
    "bioagentsCURIE": "bioagents:bifrost",
    "bioagentsID": "bifrost",
    "confidence_flag": "agent",
    "credit": [
        {
            "email": "guillaumeholley@gmail.com",
            "name": "Guillaume Holley",
            "typeEntity": "Person"
        }
    ],
    "description": "Bifrost is a command-line agent for sequencing that features a broad range of functions, such as indexing, editing, and querying the graph, and includes a graph coloring method that maps each k-mer of the graph to the genomes it occurs in.",
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "De-novo assembly",
                    "uri": "http://edamontology.org/operation_0524"
                },
                {
                    "term": "Genome indexing",
                    "uri": "http://edamontology.org/operation_3211"
                },
                {
                    "term": "Query and retrieval",
                    "uri": "http://edamontology.org/operation_0224"
                }
            ]
        }
    ],
    "homepage": "https://github.com/pmelsted/bifrost",
    "language": [
        "C",
        "C++"
    ],
    "lastUpdate": "2021-02-03T19:28:32Z",
    "license": "BSD-2-Clause",
    "name": "Bifrost",
    "owner": "Kigaard",
    "publication": [
        {
            "doi": "10.1186/S13059-020-02135-8",
            "metadata": {
                "abstract": "Â© 2020 The Author(s).Memory consumption of de Bruijn graphs is often prohibitive. Most de Bruijn graph-based assemblers reduce the complexity by compacting paths into single vertices, but this is challenging as it requires the uncompacted de Bruijn graph to be available in memory. We present a parallel and memory-efficient algorithm enabling the direct construction of the compacted de Bruijn graph without producing the intermediate uncompacted graph. Bifrost features a broad range of functions, such as indexing, editing, and querying the graph, and includes a graph coloring method that maps each k-mer of the graph to the genomes it occurs in. Availability https://github.com/pmelsted/bifrost",
                "authors": [
                    {
                        "name": "Holley G."
                    },
                    {
                        "name": "Melsted P."
                    }
                ],
                "citationCount": 11,
                "date": "2020-09-17T00:00:00Z",
                "journal": "Genome Biology",
                "title": "Bifrost: Highly parallel construction and indexing of colored and compacted de Bruijn graphs"
            },
            "pmcid": "PMC7499882",
            "pmid": "32943081"
        }
    ],
    "agentType": [
        "Command-line agent"
    ],
    "topic": [
        {
            "term": "Mapping",
            "uri": "http://edamontology.org/topic_0102"
        },
        {
            "term": "Sequence assembly",
            "uri": "http://edamontology.org/topic_0196"
        },
        {
            "term": "Transcription factors and regulatory sites",
            "uri": "http://edamontology.org/topic_0749"
        }
    ]
}
