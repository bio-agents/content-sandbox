{
  "@context": {
    "bioagents": "https://bio.agents/ontology/",
    "bsc": "http://bioschemas.org/",
    "bsct": "http://bioschemas.org/types/",
    "dct": "http://purl.org/dc/terms/",
    "edam": "http://edamontology.org/",
    "owl": "http://www.w3.org/2002/07/owl#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "sc": "http://schema.org/",
    "xsd": "http://www.w3.org/2001/XMLSchema#"
  },
  "@graph": [
    {
      "@id": "https://doi.org/10.12688/WELLCOMEOPENRES.15853.2",
      "@type": "sc:CreativeWork"
    },
    {
      "@id": "https://bio.agents/pyomeroupload",
      "@type": "sc:SoftwareApplication",
      "dct:conformsTo": "https://bioschemas.org/profiles/ComputationalAgent/0.6-DRAFT",
      "sc:applicationSubCategory": [
        {
          "@id": "edam:topic_3382"
        },
        {
          "@id": "edam:topic_3071"
        }
      ],
      "sc:citation": [
        {
          "@id": "https://doi.org/10.12688/WELLCOMEOPENRES.15853.2"
        },
        "pmcid:PMC7388197",
        "pubmed:32766455"
      ],
      "sc:description": "A Python agentkit for uploading images and metadata to OMERO.\n\nCode snipets for updating whole properties of whole ISA tree, for example permissions settings.\n\nWhen building a distribution for release through BioConda, the Python setupagents are used.\n\nLibrary of artifacts for integration with Seek4Science using Seek's REST API.\n\nExample data, notebooks and scripts for demonstrating features of OMEROConnect and pyOmeroUpload.",
      "sc:featureList": [
        {
          "@id": "edam:operation_2422"
        },
        {
          "@id": "edam:operation_3431"
        },
        {
          "@id": "edam:operation_1812"
        }
      ],
      "sc:license": "MIT",
      "sc:name": "PyOmeroUpload",
      "sc:url": "https://github.com/SynthSys/pyOmeroUpload"
    }
  ]
}