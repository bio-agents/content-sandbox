{
    "additionDate": "2021-03-19T08:29:46Z",
    "bioagentsCURIE": "bioagents:miscnn",
    "bioagentsID": "miscnn",
    "confidence_flag": "agent",
    "credit": [
        {
            "email": "dominik.mueller@informatik.uni-augsburg.de",
            "name": "Dominik Müller",
            "orcidid": "https://orcid.org/0000-0003-0838-9885",
            "typeEntity": "Person"
        }
    ],
    "description": "A framework for medical image segmentation with convolutional neural networks and deep learning.\n\nThe open-source Python library MIScnn is an intuitive API allowing fast setup of medical image segmentation pipelines with state-of-the-art convolutional neural network and deep learning models in just a few lines of code.",
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Image analysis",
                    "uri": "http://edamontology.org/operation_3443"
                },
                {
                    "term": "Network analysis",
                    "uri": "http://edamontology.org/operation_3927"
                },
                {
                    "term": "Standardisation and normalisation",
                    "uri": "http://edamontology.org/operation_3435"
                }
            ]
        }
    ],
    "homepage": "https://github.com/frankkramer-lab/MIScnn",
    "language": [
        "Python"
    ],
    "lastUpdate": "2021-04-11T09:28:07Z",
    "license": "GPL-3.0",
    "name": "MIScnn",
    "owner": "Niclaskn",
    "publication": [
        {
            "doi": "10.1186/S12880-020-00543-7",
            "metadata": {
                "abstract": "© 2021, The Author(s).Background: The increased availability and usage of modern medical imaging induced a strong need for automatic medical image segmentation. Still, current image segmentation platforms do not provide the required functionalities for plain setup of medical image segmentation pipelines. Already implemented pipelines are commonly standalone software, optimized on a specific public data set. Therefore, this paper introduces the open-source Python library MIScnn. Implementation: The aim of MIScnn is to provide an intuitive API allowing fast building of medical image segmentation pipelines including data I/O, preprocessing, data augmentation, patch-wise analysis, metrics, a library with state-of-the-art deep learning models and model utilization like training, prediction, as well as fully automatic evaluation (e.g. cross-validation). Similarly, high configurability and multiple open interfaces allow full pipeline customization. Results: Running a cross-validation with MIScnn on the Kidney Tumor Segmentation Challenge 2019 data set (multi-class semantic segmentation with 300 CT scans) resulted into a powerful predictor based on the standard 3D U-Net model. Conclusions: With this experiment, we could show that the MIScnn framework enables researchers to rapidly set up a complete medical image segmentation pipeline by using just a few lines of code. The source code for MIScnn is available in the Git repository: https://github.com/frankkramer-lab/MIScnn.",
                "authors": [
                    {
                        "name": "Kramer F."
                    },
                    {
                        "name": "Muller D."
                    }
                ],
                "citationCount": 4,
                "date": "2021-12-01T00:00:00Z",
                "journal": "BMC Medical Imaging",
                "title": "MIScnn: a framework for medical image segmentation with convolutional neural networks and deep learning"
            },
            "pmcid": "PMC7814713",
            "pmid": "33461500"
        }
    ],
    "agentType": [
        "Command-line agent"
    ],
    "topic": [
        {
            "term": "Machine learning",
            "uri": "http://edamontology.org/topic_3474"
        },
        {
            "term": "Medical imaging",
            "uri": "http://edamontology.org/topic_3384"
        },
        {
            "term": "Tomography",
            "uri": "http://edamontology.org/topic_3452"
        },
        {
            "term": "Workflows",
            "uri": "http://edamontology.org/topic_0769"
        }
    ]
}
