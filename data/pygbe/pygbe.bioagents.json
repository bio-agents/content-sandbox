{
    "additionDate": "2021-01-18T07:03:10Z",
    "bioagentsCURIE": "bioagents:pygbe",
    "bioagentsID": "pygbe",
    "confidence_flag": "agent",
    "description": "Computational nanoplasmonics in the quasistatic limit for biosensing applications.\n\nPyGBe—pronounced pigbē—is a Python library that applies the boundary integral method for biomolecular electrostatics and nanoparticle plasmonics.\n\nPyGBe achieves both algorithmic and hardware acceleration. The solution algorithm uses a Barnes-Hut treecode to accelerate each iteration of a GMRES solver to O(N logN), for N unknowns. It exploits NVIDIA GPU hardware on the most computationally intensive parts of the code using CUDA kernels in the treecode, interfacing with PyCUDA. Some parts of the code are written in C++, wrapped using SWIG.",
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Deposition",
                    "uri": "http://edamontology.org/operation_3431"
                },
                {
                    "term": "Modelling and simulation",
                    "uri": "http://edamontology.org/operation_2426"
                }
            ]
        }
    ],
    "homepage": "http://pygbe.github.io/pygbe/docs/",
    "language": [
        "C",
        "C++",
        "Python"
    ],
    "lastUpdate": "2021-01-30T15:14:13Z",
    "license": "BSD-3-Clause",
    "link": [
        {
            "type": [
                "Repository"
            ],
            "url": "https://github.com/barbagroup/pygbe"
        }
    ],
    "name": "PyGBe",
    "owner": "zsmag19",
    "publication": [
        {
            "doi": "10.1103/PHYSREVE.100.063305",
            "metadata": {
                "abstract": "© 2019 American Physical Society.The phenomenon of localized surface plasmon resonance (LSPR) provides high sensitivity in detecting biomolecules through shifts in resonance frequency when a target is present. Computational studies in this field have used the full Maxwell equations with simplified models of a sensor-analyte system, or they neglected the analyte altogether. In the long-wavelength limit, one can simplify the theory via an electrostatics approximation while adding geometrical detail in the sensor and analytes (at moderate computational cost). This work uses the latter approach, expanding the open-source PyGBe code to compute the extinction cross section of metallic nanoparticles in the presence of any target for sensing. The target molecule is represented by a surface mesh, based on its crystal structure. PyGBe is research software for continuum electrostatics, written in python with computationally expensive parts accelerated on GPU hardware, via PyCUDA. It is also accelerated algorithmically via a treecode that offers O(NlogN) computational complexity. These features allow PyGBe to handle problems with half a million boundary elements or more. In this work, we demonstrate the suitability of PyGBe, extended to compute LSPR response in the electrostatic limit, for biosensing applications. Using a model problem consisting of an isolated silver nanosphere in an electric field, our results show grid convergence as 1/N, and accurate computation of the extinction cross section as a function of wavelength (compared with an analytical solution). For a model of a sensor-analyte system, consisting of a spherical silver nanoparticle and a set of bovine serum albumin (BSA) proteins, our results again obtain grid convergence as 1/N (with respect to the Richardson extrapolated value). Computing the LSPR response as a function of wavelength in the presence of BSA proteins captures a redshift of 0.5 nm in the resonance frequency due to the presence of the analytes at 1-nm distance. The final result is a sensitivity study of the biosensor model, obtaining the shift in resonance frequency for various distances between the proteins and the nanoparticle. All results in this paper are fully reproducible, and we have deposited in archival data repositories all the materials needed to run the computations again and recreate the figures. PyGBe is open source under a permissive license and openly developed. Documentation is available at http://pygbe.github.io/pygbe/docs/.",
                "authors": [
                    {
                        "name": "Barba L.A."
                    },
                    {
                        "name": "Clementi N.C."
                    },
                    {
                        "name": "Cooper C.D."
                    }
                ],
                "citationCount": 2,
                "date": "2019-12-16T00:00:00Z",
                "journal": "Physical Review E",
                "title": "Computational nanoplasmonics in the quasistatic limit for biosensing applications"
            },
            "pmid": "31962460"
        }
    ],
    "topic": [
        {
            "term": "Chemistry",
            "uri": "http://edamontology.org/topic_3314"
        },
        {
            "term": "Mathematics",
            "uri": "http://edamontology.org/topic_3315"
        },
        {
            "term": "Protein structural motifs and surfaces",
            "uri": "http://edamontology.org/topic_0166"
        }
    ]
}
