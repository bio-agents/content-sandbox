{
  "@context": {
    "bioagents": "https://bio.agents/ontology/",
    "bsc": "http://bioschemas.org/",
    "bsct": "http://bioschemas.org/types/",
    "dct": "http://purl.org/dc/terms/",
    "edam": "http://edamontology.org/",
    "owl": "http://www.w3.org/2002/07/owl#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "sc": "http://schema.org/",
    "xsd": "http://www.w3.org/2001/XMLSchema#"
  },
  "@graph": [
    {
      "@id": "https://doi.org/10.1103/PHYSREVE.100.063305",
      "@type": "sc:CreativeWork"
    },
    {
      "@id": "https://bio.agents/pygbe",
      "@type": "sc:SoftwareApplication",
      "dct:conformsTo": "https://bioschemas.org/profiles/ComputationalAgent/0.6-DRAFT",
      "sc:applicationSubCategory": [
        {
          "@id": "edam:topic_3315"
        },
        {
          "@id": "edam:topic_3314"
        },
        {
          "@id": "edam:topic_0166"
        }
      ],
      "sc:citation": [
        "pubmed:31962460",
        {
          "@id": "https://doi.org/10.1103/PHYSREVE.100.063305"
        }
      ],
      "sc:description": "Computational nanoplasmonics in the quasistatic limit for biosensing applications.\n\nPyGBe—pronounced pigbē—is a Python library that applies the boundary integral method for biomolecular electrostatics and nanoparticle plasmonics.\n\nPyGBe achieves both algorithmic and hardware acceleration. The solution algorithm uses a Barnes-Hut treecode to accelerate each iteration of a GMRES solver to O(N logN), for N unknowns. It exploits NVIDIA GPU hardware on the most computationally intensive parts of the code using CUDA kernels in the treecode, interfacing with PyCUDA. Some parts of the code are written in C++, wrapped using SWIG.",
      "sc:featureList": [
        {
          "@id": "edam:operation_2426"
        },
        {
          "@id": "edam:operation_3431"
        }
      ],
      "sc:license": "BSD-3-Clause",
      "sc:name": "PyGBe",
      "sc:url": "http://pygbe.github.io/pygbe/docs/"
    }
  ]
}