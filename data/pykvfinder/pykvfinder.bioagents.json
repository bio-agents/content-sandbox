{
    "accessibility": "Open access",
    "additionDate": "2022-05-17T20:35:45.357863Z",
    "bioagentsCURIE": "bioagents:pykvfinder",
    "bioagentsID": "pykvfinder",
    "collectionID": [
        "COVID-19",
        "KVFinder suite",
        "Rare Disease"
    ],
    "confidence_flag": "agent",
    "cost": "Free of charge",
    "credit": [
        {
            "email": "paulo.oliveira@lnbio.cnpem.br",
            "name": "Paulo Sérgio Lopes-de-Oliveira",
            "orcidid": "https://orcid.org/0000-0002-1287-8019",
            "typeEntity": "Person",
            "typeRole": [
                "Primary contact",
                "Provider"
            ]
        },
        {
            "email": "joao.guerra@lnbio.cnpem.br",
            "name": "João Victor da Silva Guerra",
            "orcidid": "https://orcid.org/0000-0002-6800-4425",
            "typeEntity": "Person",
            "typeRole": [
                "Developer",
                "Primary contact"
            ],
            "url": "https://github.com/jvsguerra"
        },
        {
            "name": "Gabriel Ernesto Jara",
            "typeEntity": "Person"
        },
        {
            "name": "Helder Veras Ribeiro-Filho",
            "typeEntity": "Person"
        },
        {
            "name": "José Geraldo de Carvalho Pereira",
            "typeEntity": "Person"
        },
        {
            "name": "Leandro Oliveira Bortot",
            "typeEntity": "Person"
        }
    ],
    "description": "Python-C Parallel KVFinder (pyKVFinder) is an efficient and integrable Python package for biomolecular cavity detection and characterization in data science. Besides conventional cavity properties such as volume and area, which are stored as Python dictionaries, pyKVFinder computes cavity depth and hydropathy. Similar to cavity points, these spatial and physicochemical properties are stored as Python ndarrays and can be visualized using Python molecular visualization widgets. In general, pyKVFinder is designed for efficient scripting routines built on easy-to-handle data structures, such as Python dictionaries and NumPy N-dimensional arrays (ndarrays), and can be building blocks for data science and drug design applications.",
    "documentation": [
        {
            "type": [
                "User manual"
            ],
            "url": "https://lbc-lnbio.github.io/pyKVFinder/"
        }
    ],
    "editPermission": {
        "authors": [
            "jvsguerra"
        ],
        "type": "group"
    },
    "function": [
        {
            "input": [
                {
                    "data": {
                        "term": "Structure",
                        "uri": "http://edamontology.org/data_0883"
                    },
                    "format": [
                        {
                            "term": "PDB",
                            "uri": "http://edamontology.org/format_1476"
                        },
                        {
                            "term": "XYZ",
                            "uri": "http://edamontology.org/format_3877"
                        }
                    ]
                }
            ],
            "operation": [
                {
                    "term": "Binding site prediction",
                    "uri": "http://edamontology.org/operation_2575"
                },
                {
                    "term": "Molecular surface analysis",
                    "uri": "http://edamontology.org/operation_3351"
                },
                {
                    "term": "Protein property calculation",
                    "uri": "http://edamontology.org/operation_0250"
                },
                {
                    "term": "Structure comparison",
                    "uri": "http://edamontology.org/operation_2483"
                }
            ],
            "output": [
                {
                    "data": {
                        "term": "Protein structural motif",
                        "uri": "http://edamontology.org/data_2878"
                    },
                    "format": [
                        {
                            "term": "PDB",
                            "uri": "http://edamontology.org/format_1476"
                        },
                        {
                            "term": "Textual format",
                            "uri": "http://edamontology.org/format_2330"
                        }
                    ]
                }
            ]
        }
    ],
    "homepage": "https://github.com/LBC-LNBio/pyKVFinder",
    "language": [
        "C",
        "Python"
    ],
    "lastUpdate": "2022-09-21T16:46:59.300173Z",
    "license": "GPL-3.0",
    "link": [
        {
            "type": [
                "Repository"
            ],
            "url": "https://github.com/LBC-LNBio/pyKVFinder"
        },
        {
            "type": [
                "Software catalogue"
            ],
            "url": "http://lnbio.cnpem.br/bioinformatics/main/software/"
        }
    ],
    "maturity": "Mature",
    "name": "pyKVFinder",
    "operatingSystem": [
        "Linux",
        "Mac",
        "Windows"
    ],
    "owner": "jvsguerra",
    "publication": [
        {
            "doi": "10.1186/S12859-021-04519-4",
            "metadata": {
                "abstract": "© 2021, The Author(s).Background: Biomolecular interactions that modulate biological processes occur mainly in cavities throughout the surface of biomolecular structures. In the data science era, structural biology has benefited from the increasing availability of biostructural data due to advances in structural determination and computational methods. In this scenario, data-intensive cavity analysis demands efficient scripting routines built on easily manipulated data structures. To fulfill this need, we developed pyKVFinder, a Python package to detect and characterize cavities in biomolecular structures for data science and automated pipelines. Results: pyKVFinder efficiently detects cavities in biomolecular structures and computes their volume, area, depth and hydropathy, storing these cavity properties in NumPy arrays. Benefited from Python ecosystem interoperability and data structures, pyKVFinder can be integrated with third-party scientific packages and libraries for mathematical calculations, machine learning and 3D visualization in automated workflows. As proof of pyKVFinder’s capabilities, we successfully identified and compared ADRP substrate-binding site of SARS-CoV-2 and a set of homologous proteins with pyKVFinder, showing its integrability with data science packages such as matplotlib, NGL Viewer, SciPy and Jupyter notebook. Conclusions: We introduce an efficient, highly versatile and easily integrable software for detecting and characterizing biomolecular cavities in data science applications and automated protocols. pyKVFinder facilitates biostructural data analysis with scripting routines in the Python ecosystem and can be building blocks for data science and drug design applications.",
                "authors": [
                    {
                        "name": "Bortot L.O."
                    },
                    {
                        "name": "Guerra J.V.S."
                    },
                    {
                        "name": "Jara G.E."
                    },
                    {
                        "name": "Lopes-de-Oliveira P.S."
                    },
                    {
                        "name": "Pereira J.G.C."
                    },
                    {
                        "name": "Ribeiro-Filho H.V."
                    }
                ],
                "date": "2021-12-01T00:00:00Z",
                "journal": "BMC Bioinformatics",
                "title": "pyKVFinder: an efficient and integrable Python package for biomolecular cavity detection and characterization in data science"
            },
            "pmcid": "PMC8685811",
            "pmid": "34930115"
        }
    ],
    "relation": [
        {
            "bioagentsID": "KVFinder",
            "type": "isNewVersionOf"
        }
    ],
    "agentType": [
        "Command-line agent",
        "Library",
        "Script"
    ],
    "topic": [
        {
            "term": "Computational chemistry",
            "uri": "http://edamontology.org/topic_3332"
        },
        {
            "term": "Machine learning",
            "uri": "http://edamontology.org/topic_3474"
        },
        {
            "term": "Mathematics",
            "uri": "http://edamontology.org/topic_3315"
        },
        {
            "term": "Protein structural motifs and surfaces",
            "uri": "http://edamontology.org/topic_0166"
        },
        {
            "term": "Structural biology",
            "uri": "http://edamontology.org/topic_1317"
        },
        {
            "term": "Structure analysis",
            "uri": "http://edamontology.org/topic_0081"
        },
        {
            "term": "Workflows",
            "uri": "http://edamontology.org/topic_0769"
        }
    ]
}
