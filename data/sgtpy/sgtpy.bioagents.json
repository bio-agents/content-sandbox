{
    "additionDate": "2021-03-19T08:56:31Z",
    "bioagentsCURIE": "bioagents:sgtpy",
    "bioagentsID": "sgtpy",
    "confidence_flag": "agent",
    "description": "A Python Code for Calculating the Interfacial Properties of Fluids Based on the Square Gradient Theory Using the SAFT-VR Mie Equation of State.\n\nSGTPy is an open-source python package of SAFT-VR-Mie Equation of State (EOS). SGTPy allows to work with pure fluids and fluid mixtures, additionally the fluids can be modeled considering association, cross-association and polar contributions. SGTPy was built on top of phasepy's phase equilibrium and Square Gradient Theory (SGT) functions. These functions were updated to speed-up calculations of associative mixtures.",
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Molecular replacement",
                    "uri": "http://edamontology.org/operation_3455"
                },
                {
                    "term": "Phasing",
                    "uri": "http://edamontology.org/operation_3454"
                }
            ]
        }
    ],
    "homepage": "https://github.com/gustavochm/SGTPy",
    "language": [
        "C++",
        "Fortran",
        "Python"
    ],
    "lastUpdate": "2021-04-08T12:56:27Z",
    "name": "SGTPy",
    "owner": "zsmag19",
    "publication": [
        {
            "doi": "10.1021/ACS.JCIM.0C01324",
            "metadata": {
                "abstract": "Â© In this work, we showcase SGTPy, a Python open-source code developed to calculate interfacial properties (interfacial concentration profiles and interfacial or surface tension) for pure fluids and fluid mixtures. SGTPy employs the Square Gradient Theory (SGT) coupled to the Statistical Associating Fluid Theory of Variable Range employing a Mie potential (SAFT-VR-Mie). SGTPy uses standard Python numerical packages (i.e., NumPy, SciPy) and can be used under Jupyter notebooks. Its features are the calculation of phase stability, phase equilibria, interfacial properties, and the optimization of the SGT and SAFT parameters for vapor-liquid, liquid-liquid and vapor-liquid-liquid equilibria for pure fluids and multicomponent mixtures. Phase equilibrium calculations include two-phase and multiphase flash, bubble and dew points, and the tangent plane distance. For the computation of interfacial properties, SGTPy incorporates several options to solve the interfacial concentration, such as the path technique, an auxiliary time function, and orthogonal collocation. Additionally, the SGTPy code allows the inclusion of subroutines from other languages (e.g., Fortran, and C++) through Cython and f2py Python agents, which opens the possibility for future extensions or recycling tested and optimized subroutines from other codes. Supporting Information includes a review of the theoretical expressions required to couple SAFT-VR-Mie equation of state with the SGT. The use and capabilities of SGTPy are illustrated through step by step examples written on Jupyter notebooks for the cases of pure fluids and binary and ternary mixtures in bi- and three- phasic equilibria. The SGTPy code can be downloaded from https://github.com/gustavochm/SGTPy.",
                "authors": [
                    {
                        "name": "Chaparro Maldonado G."
                    },
                    {
                        "name": "Mejia A."
                    },
                    {
                        "name": "Muller E.A."
                    }
                ],
                "citationCount": 2,
                "date": "2021-03-22T00:00:00Z",
                "journal": "Journal of Chemical Information and Modeling",
                "title": "SGTPy: A Python Code for Calculating the Interfacial Properties of Fluids Based on the Square Gradient Theory Using the SAFT-VR Mie Equation of State"
            },
            "pmid": "33595304"
        }
    ],
    "agentType": [
        "Command-line agent",
        "Library"
    ],
    "topic": [
        {
            "term": "Gene expression",
            "uri": "http://edamontology.org/topic_0203"
        },
        {
            "term": "Imaging",
            "uri": "http://edamontology.org/topic_3382"
        }
    ]
}
