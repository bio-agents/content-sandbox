{
    "additionDate": "2021-01-18T08:30:50Z",
    "bioagentsCURIE": "bioagents:easyparallel",
    "bioagentsID": "easyparallel",
    "confidence_flag": "agent",
    "credit": [
        {
            "email": "hzz0024@auburn.edu",
            "name": "Honggang Zhao",
            "orcidid": "https://orcid.org/0000-0001-6945-0331",
            "typeEntity": "Person"
        }
    ],
    "description": "EasyParallel is a free GUI cross-platform agent that utilizes a multi-thread parallel algorithm for processing multiple iterations of STRUCTURE and NEWHYBRIDS analyses.",
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Genotyping",
                    "uri": "http://edamontology.org/operation_3196"
                },
                {
                    "term": "Modelling and simulation",
                    "uri": "http://edamontology.org/operation_2426"
                }
            ]
        }
    ],
    "homepage": "https://github.com/hzz0024/EasyParallel",
    "language": [
        "Python"
    ],
    "lastUpdate": "2021-03-05T15:02:37Z",
    "license": "GPL-3.0",
    "name": "EasyParallel",
    "operatingSystem": [
        "Mac",
        "Windows"
    ],
    "owner": "Kigaard",
    "publication": [
        {
            "doi": "10.1371/JOURNAL.PONE.0232110",
            "metadata": {
                "abstract": "Â© 2020 Zhao et al. This is an open access article, free of all copyright, and may be freely reproduced, distributed, transmitted, modified, built upon, or otherwise used by anyone for any lawful purpose. The work is made available under the Creative Commons CC0 public domain dedication.The software programs STRUCTURE and NEWHYBRIDS are widely used population genetic programs useful in addressing questions related to genetic structure, admixture, and hybridization. These programs usually require a large number of independent runs with many iterations to provide robust data for downstream analyses, thus significantly increasing computation time. Programs such as Structure_threader and parallelnewhybrid were previously developed to address this problem by processing tasks in parallel on a multi-threaded processor; however some programming knowledge (e.g., R, Bash) is required to run these programs. We developed EasyParallel as a community resource to facilitate practical and routine population structure and hybridization analyses. The multi-threaded parallelization of EasyParallel allows processing of large genetic datasets in a very efficient way, with its point-and-click GUI providing ready access to users who have little experience in script programming. Performance evaluation of EasyParallel using simulated datasets showed similar speed-up and parallel execution time when compared to Structure_threader and Parallelnewhybrid. EasyParallel is written in Python 3 and freely available on the GitHub site https://github.com/hzz0024/EasyParallel.",
                "authors": [
                    {
                        "name": "Beck B."
                    },
                    {
                        "name": "Fuller A."
                    },
                    {
                        "name": "Peatman E."
                    },
                    {
                        "name": "Zhao H."
                    }
                ],
                "citationCount": 3,
                "date": "2020-04-01T00:00:00Z",
                "journal": "PLoS ONE",
                "title": "EasyParallel: A GUI platform for parallelization of STRUCTURE and NEWHYBRIDS analyses"
            },
            "pmcid": "PMC7182190",
            "pmid": "32330179"
        }
    ],
    "agentType": [
        "Desktop application"
    ],
    "topic": [
        {
            "term": "Mapping",
            "uri": "http://edamontology.org/topic_0102"
        },
        {
            "term": "Population genetics",
            "uri": "http://edamontology.org/topic_3056"
        },
        {
            "term": "Sequencing",
            "uri": "http://edamontology.org/topic_3168"
        },
        {
            "term": "Software engineering",
            "uri": "http://edamontology.org/topic_3372"
        },
        {
            "term": "Zoology",
            "uri": "http://edamontology.org/topic_3500"
        }
    ]
}
