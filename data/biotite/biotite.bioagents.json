{
    "additionDate": "2021-07-28T16:14:11Z",
    "bioagentsCURIE": "bioagents:biotite",
    "bioagentsID": "biotite",
    "description": "A comprehensive library for computational molecular biology",
    "editPermission": {
        "type": "private"
    },
    "homepage": "https://www.biotite-python.org/",
    "language": [
        "Python"
    ],
    "lastUpdate": "2021-07-28T16:15:19Z",
    "license": "BSD-3-Clause",
    "link": [
        {
            "type": [
                "Repository"
            ],
            "url": "https://github.com/biotite-dev/biotite"
        }
    ],
    "maturity": "Mature",
    "name": "Biotite",
    "operatingSystem": [
        "Linux",
        "Mac",
        "Windows"
    ],
    "owner": "MaxGreil",
    "publication": [
        {
            "doi": "10.1186/s12859-018-2367-z",
            "metadata": {
                "abstract": "Â© 2018 The Author(s).Background: As molecular biology is creating an increasing amount of sequence and structure data, the multitude of software to analyze this data is also rising. Most of the programs are made for a specific task, hence the user often needs to combine multiple programs in order to reach a goal. This can make the data processing unhandy, inflexible and even inefficient due to an overhead of read/write operations. Therefore, it is crucial to have a comprehensive, accessible and efficient computational biology framework in a scripting language to overcome these limitations. Results: We have developed the Python package Biotite: a general computational biology framework, that represents sequence and structure data based on NumPy ndarrays. Furthermore the package contains seamless interfaces to biological databases and external software. The source code is freely accessible at https://github.com/biotite-dev/biotite. Conclusions:Biotite is unifying in two ways: At first it bundles popular tasks in sequence analysis and structural bioinformatics in a consistently structured package. Secondly it adresses two groups of users: novice programmers get an easy access to Biotite due to its simplicity and the comprehensive documentation. On the other hand, advanced users can profit from its high performance and extensibility. They can implement their algorithms upon Biotite, so they can skip writing code for general functionality (like file parsers) and can focus on what their software makes unique.",
                "authors": [
                    {
                        "name": "Hamacher K."
                    },
                    {
                        "name": "Kunzmann P."
                    }
                ],
                "citationCount": 14,
                "date": "2018-10-01T00:00:00Z",
                "journal": "BMC Bioinformatics",
                "title": "Biotite: A unifying open source computational biology framework in Python"
            }
        }
    ],
    "agentType": [
        "Library"
    ],
    "topic": [
        {
            "term": "Bioinformatics",
            "uri": "http://edamontology.org/topic_0091"
        },
        {
            "term": "Computational biology",
            "uri": "http://edamontology.org/topic_3307"
        },
        {
            "term": "Proteins",
            "uri": "http://edamontology.org/topic_0078"
        },
        {
            "term": "Sequence analysis",
            "uri": "http://edamontology.org/topic_0080"
        },
        {
            "term": "Software engineering",
            "uri": "http://edamontology.org/topic_3372"
        }
    ],
    "version": [
        "0.29.0"
    ]
}
