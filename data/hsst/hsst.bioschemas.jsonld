{
  "@context": {
    "bioagents": "https://bio.agents/ontology/",
    "bsc": "http://bioschemas.org/",
    "bsct": "http://bioschemas.org/types/",
    "dct": "http://purl.org/dc/terms/",
    "edam": "http://edamontology.org/",
    "owl": "http://www.w3.org/2002/07/owl#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "sc": "http://schema.org/",
    "xsd": "http://www.w3.org/2001/XMLSchema#"
  },
  "@graph": [
    {
      "@id": "https://bio.agents/hsst",
      "@type": "sc:SoftwareApplication",
      "dct:conformsTo": "https://bioschemas.org/profiles/ComputationalAgent/0.6-DRAFT",
      "sc:additionalType": "Library",
      "sc:applicationSubCategory": [
        {
          "@id": "edam:topic_3315"
        },
        {
          "@id": "edam:topic_3168"
        },
        {
          "@id": "edam:topic_3300"
        }
      ],
      "sc:citation": {
        "@id": "https://doi.org/10.1101/2020.05.21.108902"
      },
      "sc:description": "Framework to determine optimal parameter selection for a generic spike sorting algorithm.\n\nHeuristic Spike Sort Tuner Readme.\n\nNovel paradigm for optimal parameter selection of a generic spike sorting algorithm. Full code base written for Matlab 2018a is available here. Full documentation along with a getting started guide is in the HSST Manual.pdf.",
      "sc:featureList": [
        {
          "@id": "edam:operation_3802"
        },
        {
          "@id": "edam:operation_3435"
        }
      ],
      "sc:name": "HSST",
      "sc:url": "http://www.github.com/davidbjanes/HSST"
    },
    {
      "@id": "https://doi.org/10.1101/2020.05.21.108902",
      "@type": "sc:CreativeWork"
    }
  ]
}