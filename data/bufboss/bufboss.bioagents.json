{
    "additionDate": "2021-06-14T12:44:49Z",
    "bioagentsCURIE": "bioagents:bufboss",
    "bioagentsID": "bufboss",
    "confidence_flag": "agent",
    "credit": [
        {
            "email": "alanko.jarno@gmail.com",
            "name": "Jarno Alanko",
            "typeEntity": "Person",
            "typeRole": [
                "Primary contact"
            ]
        }
    ],
    "description": "BufBOSS is a agent for Buffering Updates Enables Efficient Dynamic de Bruijn Graphs.",
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Database search",
                    "uri": "http://edamontology.org/operation_2421"
                },
                {
                    "term": "De-novo assembly",
                    "uri": "http://edamontology.org/operation_0524"
                },
                {
                    "term": "Variant calling",
                    "uri": "http://edamontology.org/operation_3227"
                }
            ]
        }
    ],
    "homepage": "https://github.com/jnalanko/bufboss",
    "language": [
        "C++"
    ],
    "lastUpdate": "2021-08-18T10:30:19Z",
    "name": "BufBOSS",
    "owner": "Kigaard",
    "publication": [
        {
            "doi": "10.1016/j.csbj.2021.06.047",
            "metadata": {
                "abstract": "Â© 2021 The AuthorsMotivation: The de Bruijn graph has become a ubiquitous graph model for biological data ever since its initial introduction in the late 1990s. It has been used for a variety of purposes including genome assembly (Zerbino and Birney, 2008; Bankevich et al., 2012; Peng et al., 2012), variant detection (Alipanahi et al., 2020b; Iqbal et al., 2012), and storage of assembled genomes (Chikhi et al., 2016). For this reason, there have been over a dozen methods for building and representing the de Bruijn graph and its variants in a space and time efficient manner. Results: With the exception of a few data structures (Muggli et al., 2019; Holley and Melsted, 2020; Crawford et al.,2018), compressed and compact de Bruijn graphs do not allow for the graph to be efficiently updated, meaning that data can be added or deleted. The most recent compressed dynamic de Bruijn graph (Alipanahi et al., 2020a), relies on dynamic bit vectors which are slow in theory and practice. To address this shortcoming, we present a compressed dynamic de Bruijn graph that removes the necessity of dynamic bit vectors by buffering data that should be added or removed from the graph. We implement our method, which we refer to as BufBOSS, and compare its performance to Bifrost, DynamicBOSS, and FDBG. Our experiments demonstrate that BufBOSS achieves attractive trade-offs compared to other agents in terms of time, memory and disk, and has the best deletion performance by an order of magnitude.",
                "authors": [
                    {
                        "name": "Alanko J."
                    },
                    {
                        "name": "Alipanahi B."
                    },
                    {
                        "name": "Boucher C."
                    },
                    {
                        "name": "Gagie T."
                    },
                    {
                        "name": "Settle J."
                    }
                ],
                "date": "2021-01-01T00:00:00Z",
                "journal": "Computational and Structural Biotechnology Journal",
                "title": "Buffering updates enables efficient dynamic de Bruijn graphs"
            },
            "type": [
                "Primary"
            ]
        }
    ],
    "agentType": [
        "Command-line agent"
    ],
    "topic": [
        {
            "term": "Literature and language",
            "uri": "http://edamontology.org/topic_3068"
        },
        {
            "term": "Mathematics",
            "uri": "http://edamontology.org/topic_3315"
        },
        {
            "term": "Sequence assembly",
            "uri": "http://edamontology.org/topic_0196"
        }
    ]
}
