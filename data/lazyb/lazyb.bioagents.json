{
    "accessibility": "Open access",
    "additionDate": "2021-11-08T23:00:44.357474Z",
    "bioagentsCURIE": "bioagents:lazyb",
    "bioagentsID": "lazyb",
    "confidence_flag": "agent",
    "cost": "Free of charge",
    "credit": [
        {
            "email": "thomas@bioinf.uni-leipzig.de",
            "name": "Thomas Gatter",
            "orcidid": "https://orcid.org/0000-0001-5567-3016",
            "typeEntity": "Person"
        },
        {
            "email": "studla@bioinf.uni-leipzig.de",
            "name": "Peter F. Stadler",
            "typeEntity": "Person"
        },
        {
            "name": "Jörg Fallmann"
        },
        {
            "name": "Polina Drozdova"
        },
        {
            "name": "Sarah von Löhneysen"
        },
        {
            "name": "Tom Hartmann"
        }
    ],
    "description": "Economic Genome Assembly from Low Coverage Illumina and Nanopore Data",
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "De-novo assembly",
                    "uri": "http://edamontology.org/operation_0524"
                },
                {
                    "term": "Genome assembly",
                    "uri": "http://edamontology.org/operation_0525"
                },
                {
                    "term": "Scaffolding",
                    "uri": "http://edamontology.org/operation_3216"
                },
                {
                    "term": "Sequence trimming",
                    "uri": "http://edamontology.org/operation_3192"
                },
                {
                    "term": "k-mer counting",
                    "uri": "http://edamontology.org/operation_3472"
                }
            ]
        }
    ],
    "homepage": "https://github.com/TGatter/LazyB",
    "language": [
        "Python",
        "Shell"
    ],
    "lastUpdate": "2021-11-08T23:00:44.361054Z",
    "license": "Not licensed",
    "link": [
        {
            "type": [
                "Repository"
            ],
            "url": "https://github.com/TGatter/LazyB"
        }
    ],
    "name": "LazyB",
    "operatingSystem": [
        "Linux",
        "Mac",
        "Windows"
    ],
    "owner": "Jennifer",
    "publication": [
        {
            "doi": "10.1186/S13015-021-00186-5",
            "metadata": {
                "abstract": "© 2021, The Author(s).Background: Advances in genome sequencing over the last years have lead to a fundamental paradigm shift in the field. With steadily decreasing sequencing costs, genome projects are no longer limited by the cost of raw sequencing data, but rather by computational problems associated with genome assembly. There is an urgent demand for more efficient and and more accurate methods is particular with regard to the highly complex and often very large genomes of animals and plants. Most recently, “hybrid” methods that integrate short and long read data have been devised to address this need. Results: LazyB is such a hybrid genome assembler. It has been designed specificially with an emphasis on utilizing low-coverage short and long reads. LazyB starts from a bipartite overlap graph between long reads and restrictively filtered short-read unitigs. This graph is translated into a long-read overlap graph G. Instead of the more conventional approach of removing tips, bubbles, and other local features, LazyB stepwisely extracts subgraphs whose global properties approach a disjoint union of paths. First, a consistently oriented subgraph is extracted, which in a second step is reduced to a directed acyclic graph. In the next step, properties of proper interval graphs are used to extract contigs as maximum weight paths. These path are translated into genomic sequences only in the final step. A prototype implementation of LazyB, entirely written in python, not only yields significantly more accurate assemblies of the yeast and fruit fly genomes compared to state-of-the-art pipelines but also requires much less computational effort. Conclusions: LazyB is new low-cost genome assembler that copes well with large genomes and low coverage. It is based on a novel approach for reducing the overlap graph to a collection of paths, thus opening new avenues for future improvements. Availability: The LazyB prototype is available at https://github.com/TGatter/LazyB.",
                "authors": [
                    {
                        "name": "Drozdova P."
                    },
                    {
                        "name": "Fallmann J."
                    },
                    {
                        "name": "Gatter T."
                    },
                    {
                        "name": "Hartmann T."
                    },
                    {
                        "name": "Stadler P.F."
                    },
                    {
                        "name": "von Lohneysen S."
                    }
                ],
                "date": "2021-12-01T00:00:00Z",
                "journal": "Algorithms for Molecular Biology",
                "title": "LazyB: fast and cheap genome assembly"
            },
            "pmcid": "PMC8168326",
            "pmid": "34074310"
        }
    ],
    "agentType": [
        "Command-line agent"
    ],
    "topic": [
        {
            "term": "Model organisms",
            "uri": "http://edamontology.org/topic_0621"
        },
        {
            "term": "Plant biology",
            "uri": "http://edamontology.org/topic_0780"
        },
        {
            "term": "Protein expression",
            "uri": "http://edamontology.org/topic_0108"
        },
        {
            "term": "Sequence assembly",
            "uri": "http://edamontology.org/topic_0196"
        },
        {
            "term": "Zoology",
            "uri": "http://edamontology.org/topic_3500"
        }
    ]
}
