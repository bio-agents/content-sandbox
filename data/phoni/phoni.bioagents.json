{
    "additionDate": "2022-01-17T11:39:22.885755Z",
    "bioagentsCURIE": "bioagents:phoni",
    "bioagentsID": "phoni",
    "collectionID": [
        "Rare Disease"
    ],
    "confidence_flag": "agent",
    "description": "PHONI (Practical Heuristic ON Incremental matching statistics computation) is a framework supports the currently memory-friendliest way to compute the matching statistics of a pattern on highly-repetitive texts, given that the input text is precomputed with the MONI index-",
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Genome indexing",
                    "uri": "http://edamontology.org/operation_3211"
                },
                {
                    "term": "Parsing",
                    "uri": "http://edamontology.org/operation_1812"
                },
                {
                    "term": "Query and retrieval",
                    "uri": "http://edamontology.org/operation_0224"
                }
            ]
        }
    ],
    "homepage": "https://github.com/koeppl/phoni",
    "language": [
        "C++",
        "Python",
        "Shell"
    ],
    "lastUpdate": "2022-01-17T11:39:22.888054Z",
    "license": "MIT",
    "name": "PHONI",
    "owner": "Kigaard",
    "publication": [
        {
            "doi": "10.1109/DCC50243.2021.00027",
            "metadata": {
                "abstract": "Â© 2021 IEEE.Computing the matching statistics of patterns with respect to a text is a fundamental task in bioinformatics, but a formidable one when the text is a highly compressed genomic database. Bannai et al. gave an efficient solution for this case, which Rossi et al. recently implemented, but it uses two passes over the patterns and buffers a pointer for each character during the first pass. In this paper, we simplify their solution and make it streaming, at the cost of slowing it down slightly. This means that, first, we can compute the matching statistics of several long patterns (such as whole human chromosomes) in parallel while still using a reasonable amount of RAM; second, we can compute matching statistics online with low latency and thus quickly recognize when a pattern becomes incompressible relative to the database. Our code is available at http://github.com/koeppl/phoni.",
                "authors": [
                    {
                        "name": "Boucher C."
                    },
                    {
                        "name": "Gagie T."
                    },
                    {
                        "name": "Koppl D."
                    },
                    {
                        "name": "Langmead B."
                    },
                    {
                        "name": "Manzini G."
                    },
                    {
                        "name": "Navarro G."
                    },
                    {
                        "name": "Pacheco A."
                    },
                    {
                        "name": "Rossi M."
                    },
                    {
                        "name": "Tomohiro I."
                    }
                ],
                "citationCount": 1,
                "date": "2021-03-01T00:00:00Z",
                "journal": "Data Compression Conference Proceedings",
                "title": "PHONI: Streamed Matching Statistics with Multi-Genome References"
            },
            "pmcid": "PMC8583545",
            "pmid": "34778549",
            "type": [
                "Primary"
            ]
        }
    ],
    "agentType": [
        "Command-line agent"
    ],
    "topic": [
        {
            "term": "DNA",
            "uri": "http://edamontology.org/topic_0654"
        },
        {
            "term": "Proteomics experiment",
            "uri": "http://edamontology.org/topic_3520"
        },
        {
            "term": "Statistics and probability",
            "uri": "http://edamontology.org/topic_2269"
        }
    ]
}
