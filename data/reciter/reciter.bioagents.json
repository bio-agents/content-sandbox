{
    "additionDate": "2021-11-29T09:42:35.504885Z",
    "bioagentsCURIE": "bioagents:reciter",
    "bioagentsID": "reciter",
    "confidence_flag": "agent",
    "credit": [
        {
            "email": "paa2013@med.cornell.edu",
            "name": "Paul J. Albert",
            "orcidid": "https://orcid.org/0000-0001-8220-272X",
            "typeEntity": "Person"
        }
    ],
    "description": "ReCiter is a highly accurate system for guessing which publications in PubMed a given person has authored. ReCiter includes a Java application, a DynamoDB-hosted database, and a set of RESTful microservices which collectively allow institutions to maintain accurate and up-to-date author publication lists for thousands of people. This software is optimized for disambiguating authorship in PubMed and, optionally, Scopus. ReCiter accurately identifies articles, including those at previous affiliations, by a given person. It does this by leveraging institutionally maintained identity data (e.g., departments, relationships, email addresses, year of degree, etc.) With the more complete and efficient searches that result from combining these types of data, you can save time and your institution can be more productive. If you run ReCiter daily, you can ensure that the desired users are the first to learn when a new publication has appeared in PubMed.",
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Clustering",
                    "uri": "http://edamontology.org/operation_3432"
                }
            ]
        }
    ],
    "homepage": "https://github.com/wcmc-its/reciter/",
    "language": [
        "Java"
    ],
    "lastUpdate": "2021-11-29T09:42:49.831053Z",
    "license": "Apache-2.0",
    "link": [
        {
            "type": [
                "Issue tracker"
            ],
            "url": "https://github.com/wcmc-its/reciter/issues"
        }
    ],
    "name": "ReCiter",
    "owner": "Kigaard",
    "publication": [
        {
            "doi": "10.1371/JOURNAL.PONE.0244641",
            "metadata": {
                "abstract": "Copyright: © 2021 Albert et al. This is an open access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.Academic institutions need to maintain publication lists for thousands of faculty and other scholars. Automated agents are essential to minimize the need for direct feedback from the scholars themselves who are practically unable to commit necessary effort to keep the data accurate. In relying exclusively on clustering techniques, author disambiguation applications fail to satisfy key use cases of academic institutions. Algorithms can perfectly group together a set of publications authored by a common individual, but, for them to be useful to an academic institution, they need to programmatically and recurrently map articles to thousands of scholars of interest en masse. Consistent with a savvy librarian’s approach for generating a scholar’s list of publications, identity-driven authorship prediction is the process of using information about a scholar to quantify the likelihood that person wrote certain articles. ReCiter is an application that attempts to do exactly that. ReCiter uses institutionally-maintained identity data such as name of department and year of terminal degree to predict which articles a given scholar has authored. To compute the overall score for a given candidate article from PubMed (and, optionally, Scopus), ReCiter uses: up to 12 types of commonly available, identity data; whether other members of a cluster have been accepted or rejected by a user; and the average score of a cluster. In addition, ReCiter provides scoring and qualitative evidence supporting why particular articles are suggested. This context and confidence scoring allows curators to more accurately provide feedback on behalf of scholars. To help users to more efficiently curate publication lists, we used a support vector machine analysis to optimize the scoring of the ReCiter algorithm. In our analysis of a diverse test group of 500 scholars at an academic private medical center, ReCiter correctly predicted 98% of their publications in PubMed.",
                "authors": [
                    {
                        "name": "Albert P.J."
                    },
                    {
                        "name": "Bales M."
                    },
                    {
                        "name": "Cole C.L."
                    },
                    {
                        "name": "Dutta S."
                    },
                    {
                        "name": "Johnson S.B."
                    },
                    {
                        "name": "Lin J."
                    },
                    {
                        "name": "Mansour M."
                    },
                    {
                        "name": "Wheeler T.R."
                    },
                    {
                        "name": "Wright D."
                    },
                    {
                        "name": "Zhu Z."
                    }
                ],
                "citationCount": 1,
                "date": "2021-04-01T00:00:00Z",
                "journal": "PLoS ONE",
                "title": "ReCiter: An open source, identity-driven, authorship prediction algorithm optimized for academic institutions"
            },
            "pmcid": "PMC8016248",
            "pmid": "33793563"
        }
    ],
    "agentType": [
        "Web API"
    ],
    "topic": [
        {
            "term": "Machine learning",
            "uri": "http://edamontology.org/topic_3474"
        },
        {
            "term": "Medical imaging",
            "uri": "http://edamontology.org/topic_3384"
        },
        {
            "term": "Transcription factors and regulatory sites",
            "uri": "http://edamontology.org/topic_0749"
        }
    ]
}
