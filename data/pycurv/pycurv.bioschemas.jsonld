{
  "@context": {
    "bioagents": "https://bio.agents/ontology/",
    "bsc": "http://bioschemas.org/",
    "bsct": "http://bioschemas.org/types/",
    "dct": "http://purl.org/dc/terms/",
    "edam": "http://edamontology.org/",
    "owl": "http://www.w3.org/2002/07/owl#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "sc": "http://schema.org/",
    "xsd": "http://www.w3.org/2001/XMLSchema#"
  },
  "@graph": [
    {
      "@id": "https://bio.agents/pycurv",
      "@type": "sc:SoftwareApplication",
      "dct:conformsTo": "https://bioschemas.org/profiles/ComputationalAgent/0.6-DRAFT",
      "sc:applicationSubCategory": [
        {
          "@id": "edam:topic_3385"
        },
        {
          "@id": "edam:topic_0611"
        },
        {
          "@id": "edam:topic_0621"
        },
        {
          "@id": "edam:topic_3452"
        },
        {
          "@id": "edam:topic_3444"
        }
      ],
      "sc:citation": [
        {
          "@id": "https://doi.org/10.1371/JOURNAL.PCBI.1007962"
        },
        "pmcid:PMC7444595",
        "pubmed:32776920"
      ],
      "sc:description": "Reliable estimation of membrane curvature for cryo-electron tomography.\n\nThis Python-based software was developed mainly to analyse curvature of membranes in 3D originating from high-resolution, noisy cryo-electron tomograms. Additionally, the software was also applied to other volumetric data with segmented structures or directly surface data, e.g. brain or organs from MRI and cells from confocal light microscopy. Accepted image data formats are: MRC, EM, VTI, NII. Accepted surface data formats are: VTP, VTK, STL, PLY.\n\nMoreover, the software can be used to calculate distances between two adjacent membranes and thicknesses of a membrane organelle.\n\nFurthermore, the software enables to calculate density distribution of particles mapped on a membrane, e.g. membrane-bound ribosomes.\n\nThis package contains Python scripts applying the PyCurv package and combining different functions into the workflows described above, the main are:.",
      "sc:featureList": [
        {
          "@id": "edam:operation_0461"
        },
        {
          "@id": "edam:operation_3216"
        },
        {
          "@id": "edam:operation_0337"
        },
        {
          "@id": "edam:operation_3435"
        }
      ],
      "sc:license": "LGPL-3.0",
      "sc:name": "PyCurv",
      "sc:url": "https://github.com/kalemaria/pycurv"
    },
    {
      "@id": "https://doi.org/10.1371/JOURNAL.PCBI.1007962",
      "@type": "sc:CreativeWork"
    }
  ]
}