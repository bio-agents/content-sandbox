{
  "@context": {
    "bioagents": "https://bio.agents/ontology/",
    "bsc": "http://bioschemas.org/",
    "bsct": "http://bioschemas.org/types/",
    "dct": "http://purl.org/dc/terms/",
    "edam": "http://edamontology.org/",
    "owl": "http://www.w3.org/2002/07/owl#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "sc": "http://schema.org/",
    "xsd": "http://www.w3.org/2001/XMLSchema#"
  },
  "@graph": [
    {
      "@id": "https://bio.agents/segdgan",
      "@type": "sc:SoftwareApplication",
      "dct:conformsTo": "https://bioschemas.org/profiles/ComputationalAgent/0.6-DRAFT",
      "sc:applicationSubCategory": [
        {
          "@id": "edam:topic_3444"
        },
        {
          "@id": "edam:topic_3384"
        },
        {
          "@id": "edam:topic_3303"
        }
      ],
      "sc:citation": [
        {
          "@id": "https://doi.org/10.1016/J.CLINIMAG.2020.10.014"
        },
        "pubmed:33120283"
      ],
      "sc:description": "Automatic segmentation of prostate magnetic resonance imaging using generative adversarial networks.\n\nThis repository is the official repository of the article \"Automatic Segmentation of Prostate Magnetic Resonance Imaging Using Generative Adversarial Networks\" To train a model use the train.py file, you can use the following commands line to get the important arguments.\n\nYou can config the detailed parameters in the config.py.\n\nTo do the inference, use the test.py file, you can use the following commands line to get the important arguments.",
      "sc:featureList": [
        {
          "@id": "edam:operation_3927"
        },
        {
          "@id": "edam:operation_3799"
        },
        {
          "@id": "edam:operation_3937"
        }
      ],
      "sc:name": "SegDGAN",
      "sc:url": "https://github.com/w3user/SegDGAN"
    },
    {
      "@id": "https://doi.org/10.1016/J.CLINIMAG.2020.10.014",
      "@type": "sc:CreativeWork"
    }
  ]
}