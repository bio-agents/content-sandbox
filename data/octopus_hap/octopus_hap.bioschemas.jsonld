{
  "@context": {
    "bioagents": "https://bio.agents/ontology/",
    "bsc": "http://bioschemas.org/",
    "bsct": "http://bioschemas.org/types/",
    "dct": "http://purl.org/dc/terms/",
    "edam": "http://edamontology.org/",
    "owl": "http://www.w3.org/2002/07/owl#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "sc": "http://schema.org/",
    "xsd": "http://www.w3.org/2001/XMLSchema#"
  },
  "@graph": [
    {
      "@id": "https://bio.agents/octopus_hap",
      "@type": "sc:SoftwareApplication",
      "dct:conformsTo": "https://bioschemas.org/profiles/ComputationalAgent/0.6-DRAFT",
      "sc:additionalType": "Command-line agent",
      "sc:applicationSubCategory": {
        "@id": "edam:topic_2533"
      },
      "sc:citation": {
        "@id": "https://doi.org/10.1038/s41587-021-00861-3"
      },
      "sc:description": "Octopus is a mapping-based variant caller that implements several calling models within a unified haplotype-aware framework. Octopus takes inspiration from particle filtering by constructing a tree of haplotypes and dynamically pruning and extending the tree based on haplotype posterior probabilities in a sequential manner. This allows octopus to implicitly consider all possible haplotypes at a given loci in reasonable time.",
      "sc:license": "MIT",
      "sc:name": "octopus",
      "sc:softwareHelp": {
        "@id": "https://luntergroup.github.io/octopus/"
      },
      "sc:url": "https://github.com/luntergroup/octopus"
    },
    {
      "@id": "https://doi.org/10.1038/s41587-021-00861-3",
      "@type": "sc:CreativeWork"
    }
  ]
}