{
    "additionDate": "2021-01-18T11:37:39Z",
    "bioagentsCURIE": "bioagents:sg-cnn",
    "bioagentsID": "sg-cnn",
    "confidence_flag": "agent",
    "description": "Self-grouping convolutional neural networks.\n\nAlthough group convolutions are increasingly used on deep convolutional neural networks to improve the computation efficiency and to reduce the number of parameters, most existing methods construct their group convolution architectures by predefinedly partitioning the filters of each convolutional layer into multiple regular filter groups with equally spatial group size and data-independence, which is disadvantageous to fully exploit their potential abilities.",
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Clustering",
                    "uri": "http://edamontology.org/operation_3432"
                },
                {
                    "term": "Filtering",
                    "uri": "http://edamontology.org/operation_3695"
                },
                {
                    "term": "Sequence trimming",
                    "uri": "http://edamontology.org/operation_3192"
                }
            ]
        }
    ],
    "homepage": "https://github.com/QingbeiGuo/SG-CNN.git",
    "language": [
        "C",
        "Python"
    ],
    "lastUpdate": "2021-02-16T15:35:56Z",
    "name": "SG-CNN",
    "owner": "zsmag19",
    "publication": [
        {
            "doi": "10.1016/J.NEUNET.2020.09.015",
            "metadata": {
                "abstract": "Â© 2020Although group convolution operators are increasingly used in deep convolutional neural networks to improve the computational efficiency and to reduce the number of parameters, most existing methods construct their group convolution architectures by a predefined partitioning of the filters of each convolutional layer into multiple regular filter groups with an equal spatial group size and data-independence, which prevents a full exploitation of their potential. To tackle this issue, we propose a novel method of designing self-grouping convolutional neural networks, called SG-CNN, in which the filters of each convolutional layer group themselves based on the similarity of their importance vectors. Concretely, for each filter, we first evaluate the importance value of their input channels to identify the importance vectors, and then group these vectors by clustering. Using the resulting data-dependent centroids, we prune the less important connections, which implicitly minimizes the accuracy loss of the pruning, thus yielding a set of diverse group convolution filters. Subsequently, we develop two fine-tuning schemes, i.e. (1) both local and global fine-tuning and (2) global only fine-tuning, which experimentally deliver comparable results, to recover the recognition capacity of the pruned network. Comprehensive experiments carried out on the CIFAR-10/100 and ImageNet datasets demonstrate that our self-grouping convolution method adapts to various state-of-the-art CNN architectures, such as ResNet and DenseNet, and delivers superior performance in terms of compression ratio, speedup and recognition accuracy. We demonstrate the ability of SG-CNN to generalize by transfer learning, including domain adaption and object detection, showing competitive results. Our source code is available at https://github.com/QingbeiGuo/SG-CNN.git.",
                "authors": [
                    {
                        "name": "Feng Z."
                    },
                    {
                        "name": "Guo Q."
                    },
                    {
                        "name": "Kittler J."
                    },
                    {
                        "name": "Wu X.-J."
                    }
                ],
                "citationCount": 1,
                "date": "2020-12-01T00:00:00Z",
                "journal": "Neural Networks",
                "title": "Self-grouping convolutional neural networks"
            },
            "pmid": "33039787"
        }
    ],
    "topic": [
        {
            "term": "Imaging",
            "uri": "http://edamontology.org/topic_3382"
        },
        {
            "term": "Machine learning",
            "uri": "http://edamontology.org/topic_3474"
        },
        {
            "term": "Proteomics experiment",
            "uri": "http://edamontology.org/topic_3520"
        }
    ]
}
