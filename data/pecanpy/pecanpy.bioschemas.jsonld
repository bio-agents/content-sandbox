{
  "@context": {
    "bioagents": "https://bio.agents/ontology/",
    "bsc": "http://bioschemas.org/",
    "bsct": "http://bioschemas.org/types/",
    "dct": "http://purl.org/dc/terms/",
    "edam": "http://edamontology.org/",
    "owl": "http://www.w3.org/2002/07/owl#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "sc": "http://schema.org/",
    "xsd": "http://www.w3.org/2001/XMLSchema#"
  },
  "@graph": [
    {
      "@id": "https://bio.agents/pecanpy",
      "@type": "sc:SoftwareApplication",
      "dct:conformsTo": "https://bioschemas.org/profiles/ComputationalAgent/0.6-DRAFT",
      "sc:applicationSubCategory": [
        {
          "@id": "edam:topic_3474"
        },
        {
          "@id": "edam:topic_3168"
        },
        {
          "@id": "edam:topic_0602"
        }
      ],
      "sc:citation": {
        "@id": "https://doi.org/10.1101/2020.07.23.218487"
      },
      "sc:description": "PecanPy: A parallelized, efficient, and accelerated node2vec in Python.\n\nLearning low-dimensional representations (embeddings) of nodes in large graphs is key to applying machine learning on massive biological networks. Node2vec is the most widely used method for node embedding. PecanPy is a fast, parallelized, memory efficient, and cache optimized Python implementation of node2vec. It uses cache-optimized compact graph data structures and precomputing/parallelization to result in fast, high-quality node embeddings for biological networks of all sizes and densities.",
      "sc:featureList": [
        {
          "@id": "edam:operation_0337"
        },
        {
          "@id": "edam:operation_3927"
        }
      ],
      "sc:license": "BSD-3-Clause",
      "sc:name": "PecanPy",
      "sc:url": "https://github.com/krishnanlab/pecanpy"
    },
    {
      "@id": "https://doi.org/10.1101/2020.07.23.218487",
      "@type": "sc:CreativeWork"
    }
  ]
}