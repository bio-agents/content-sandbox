{
    "accessibility": "Open access",
    "additionDate": "2020-01-14T19:55:17Z",
    "bioagentsCURIE": "bioagents:JUDI",
    "bioagentsID": "JUDI",
    "confidence_flag": "agent",
    "description": "Bioinformatics Pipeline using JUDI.\n\nThis repository contains the source code of JUDI, a workflow management system for developing complex bioinformatics software with many parameter settings. Bioinformatics pipeline: Just Do It!.\n\nJUDI - Bioinformatics Pipeline: Just Do It.",
    "editPermission": {
        "type": "public"
    },
    "homepage": "https://github.com/ncbi/JUDI",
    "language": [
        "CWL",
        "Python"
    ],
    "lastUpdate": "2020-12-14T13:59:51Z",
    "license": "MIT",
    "name": "JUDI",
    "owner": "Pub2Agents",
    "publication": [
        {
            "doi": "10.1093/BIOINFORMATICS/BTZ956",
            "metadata": {
                "abstract": "Â© 2020 Published by Oxford University Press 2019. This work is written by US Government employees and is in the public domain in the US.Large-scale data analysis in bioinformatics requires pipelined execution of multiple software. Generally each stage in a pipeline takes considerable computing resources and several workflow management systems (WMS), e.g. Snakemake, Nextflow, Common Workflow Language, Galaxy, etc. have been developed to ensure optimum execution of the stages across two invocations of the pipeline. However, when the pipeline needs to be executed with different settings of parameters, e.g.Thresholds, underlying algorithms, etc.These WMS require significant scripting to ensure an optimal execution. We developed JUDI on top of DoIt, a Python based WMS, to systematically handle parameter settings based on the principles of database management systems. Using a novel modular approach that encapsulates a parameter database in each task and file associated with a pipeline stage, JUDI simplifies plug-And-play of the pipeline stages. For a typical pipeline with n parameters, JUDI reduces the number of lines of scripting required by a factor of O(n). With properly designed parameter databases, JUDI not only enables reproducing research under published values of parameters but also facilitates exploring newer results under novel parameter settings.",
                "authors": [
                    {
                        "name": "Pal S."
                    },
                    {
                        "name": "Przytycka T.M."
                    }
                ],
                "citationCount": 2,
                "date": "2020-04-15T00:00:00Z",
                "journal": "Bioinformatics",
                "title": "Bioinformatics pipeline using JUDI: Just Do It!"
            },
            "pmid": "31882996"
        }
    ],
    "agentType": [
        "Command-line agent"
    ],
    "topic": [
        {
            "term": "Bioinformatics",
            "uri": "http://edamontology.org/topic_0091"
        },
        {
            "term": "Database management",
            "uri": "http://edamontology.org/topic_3489"
        },
        {
            "term": "Workflows",
            "uri": "http://edamontology.org/topic_0769"
        }
    ],
    "validated": 1
}
