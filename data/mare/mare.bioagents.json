{
    "additionDate": "2021-01-18T09:05:51Z",
    "bioagentsCURIE": "bioagents:mare",
    "bioagentsID": "mare",
    "confidence_flag": "agent",
    "credit": [
        {
            "email": "m.capuccini@gmail.com",
            "name": "Marco Capuccini",
            "orcidid": "https://orcid.org/0000-0002-4851-759X",
            "typeEntity": "Person"
        }
    ],
    "description": "Processing Big Data with application containers on Apache Spark.\n\nItalian, pronounced: /ˈmare/. Noun: Sea.\n\nMaRe has been developed with scientific application in mind. High-throughput methods produced massive datasets in the past decades, and using frameworks like Spark and Hadoop is a natural choice to enable high-throughput analysis. In scientific applications, many agents are highly optimized to resemble, or detect some phenomena that occur in a certain system. Hence, sometimes the effort of reimplementing scientific agents in Spark or Hadoop can't be sustained by research groups. MaRe aims to provide the means to run existing serial agents in MapReduce fashion. Since many of the available scientific agents are trivially parallelizable, MapReduce is an excellent paradigm that can be used to parallelize the computation.",
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Splitting",
                    "uri": "http://edamontology.org/operation_3359"
                },
                {
                    "term": "Variant calling",
                    "uri": "http://edamontology.org/operation_3227"
                }
            ]
        }
    ],
    "homepage": "https://github.com/mcapuccini/MaRe",
    "language": [
        "Scala"
    ],
    "lastUpdate": "2021-02-19T09:41:40Z",
    "license": "Apache-2.0",
    "name": "MaRe",
    "owner": "Niclaskn",
    "publication": [
        {
            "doi": "10.1093/GIGASCIENCE/GIAA042",
            "metadata": {
                "abstract": "© 2020 The Author(s) 2020. Published by Oxford University Press.Background: Life science is increasingly driven by Big Data analytics, and the MapReduce programming model has been proven successful for data-intensive analyses. However, current MapReduce frameworks offer poor support for reusing existing processing agents in bioinformatics pipelines. Furthermore, these frameworks do not have native support for application containers, which are becoming popular in scientific data processing. Results: Here we present MaRe, an open source programming library that introduces support for Docker containers in Apache Spark. Apache Spark and Docker are the MapReduce framework and container engine that have collected the largest open source community; thus, MaRe provides interoperability with the cutting-edge software ecosystem. We demonstrate MaRe on 2 data-intensive applications in life science, showing ease of use and scalability. Conclusions: MaRe enables scalable data-intensive processing in life science with Apache Spark and application containers. When compared with current best practices, which involve the use of workflow systems, MaRe has the advantage of providing data locality, ingestion from heterogeneous storage systems, and interactive processing. MaRe is generally applicable and available as open source software.",
                "authors": [
                    {
                        "name": "Capuccini M."
                    },
                    {
                        "name": "Dahlo M."
                    },
                    {
                        "name": "Spjuth O."
                    },
                    {
                        "name": "Toor S."
                    }
                ],
                "date": "2020-05-20T00:00:00Z",
                "journal": "GigaScience",
                "title": "MaRe: Processing Big Data with application containers on Apache Spark"
            },
            "pmcid": "PMC7199472",
            "pmid": "32369166"
        }
    ],
    "agentType": [
        "Library"
    ],
    "topic": [
        {
            "term": "Biology",
            "uri": "http://edamontology.org/topic_3070"
        },
        {
            "term": "Software engineering",
            "uri": "http://edamontology.org/topic_3372"
        },
        {
            "term": "Workflows",
            "uri": "http://edamontology.org/topic_0769"
        }
    ]
}
