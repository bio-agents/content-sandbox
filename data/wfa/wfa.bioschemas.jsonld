{
  "@context": {
    "bioagents": "https://bio.agents/ontology/",
    "bsc": "http://bioschemas.org/",
    "bsct": "http://bioschemas.org/types/",
    "dct": "http://purl.org/dc/terms/",
    "edam": "http://edamontology.org/",
    "owl": "http://www.w3.org/2002/07/owl#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "sc": "http://schema.org/",
    "xsd": "http://www.w3.org/2001/XMLSchema#"
  },
  "@graph": [
    {
      "@id": "https://doi.org/10.1093/BIOINFORMATICS/BTAA777",
      "@type": "sc:CreativeWork"
    },
    {
      "@id": "https://bio.agents/wfa",
      "@type": "sc:SoftwareApplication",
      "dct:conformsTo": "https://bioschemas.org/profiles/ComputationalAgent/0.6-DRAFT",
      "sc:applicationSubCategory": [
        {
          "@id": "edam:topic_3168"
        },
        {
          "@id": "edam:topic_0080"
        }
      ],
      "sc:citation": [
        {
          "@id": "https://doi.org/10.1093/BIOINFORMATICS/BTAA777"
        },
        "pubmed:32915952"
      ],
      "sc:description": "Fast gap-affine pairwise alignment using the wavefront algorithm.\n\nThe wavefront alignment (WFA) algorithm is an exact gap-affine algorithm that takes advantage of.\n\nhomologous regions between the sequences to accelerate the alignment process. As opposed to traditional dynamic programming algorithms that run in quadratic time, the WFA runs in time O(ns), proportional to the read length n and the alignment score s, using O(s^2) memory. Moreover, the WFA exhibits simple data dependencies that can be easily vectorized, even by the automatic features of modern compilers, for different architectures, without the need to adapt the code.",
      "sc:featureList": [
        {
          "@id": "edam:operation_0496"
        },
        {
          "@id": "edam:operation_3198"
        },
        {
          "@id": "edam:operation_0491"
        }
      ],
      "sc:name": "WFA",
      "sc:url": "https://github.com/smarco/WFA"
    }
  ]
}