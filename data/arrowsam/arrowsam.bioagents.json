{
    "additionDate": "2019-11-14T18:09:31Z",
    "bioagentsCURIE": "bioagents:ArrowSAM",
    "bioagentsID": "ArrowSAM",
    "confidence_flag": "agent",
    "description": "ArrowSAM is an in-memory Sequence Alignment/Map (SAM) representation which uses Apache Arrow framework (A cross-language development platform for in-memory data) and Plasma (Shared-Memory) Object Store to store and process SAM columnar data in-memory.",
    "editPermission": {
        "type": "public"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Data handling",
                    "uri": "http://edamontology.org/operation_2409"
                },
                {
                    "term": "Genome alignment",
                    "uri": "http://edamontology.org/operation_3182"
                }
            ]
        }
    ],
    "homepage": "https://github.com/abs-tudelft/ArrowSAM",
    "lastUpdate": "2021-08-23T14:09:17Z",
    "link": [
        {
            "type": [
                "Repository"
            ],
            "url": "https://github.com/abs-tudelft/ArrowSAM"
        }
    ],
    "name": "ArrowSAM",
    "owner": "Pub2Agents",
    "publication": [
        {
            "doi": "10.1109/ICCAIS48893.2020.9096725",
            "metadata": {
                "abstract": "© 2020 IEEE.The rapidly growing size of genomics data bases, driven by advances in sequencing technologies, demands fast and cost-effective processing. However, processing this data creates many challenges, particularly in selecting appropriate algorithms and computing platforms. Computing systems need data closer to the processor for fast processing. Traditionally, due to cost, volatility and other physical constraints of DRAM, it was not feasible to place large amounts of working data sets in memory. However, new emerging storage class memories allow storing and processing big data closer to the processor. In this work, we show how the commonly used genomics data format, Sequence Alignment/Map (SAM), can be presented in the Apache Arrow in-memory data representation to benefit of in-memory processing and to ensure better scalability through shared memory objects, by avoiding large (de)-serialization overheads in cross-language interoperability. To demonstrate the benefits of such a system, we propose ArrowSAM, an in-memory SAM format that uses the Apache Arrow framework, and integrate it into genome pre-processing pipelines including BWA-MEM, Picard and Sambamba. Results show 15x and 2.4x speedups as compared to Picard and Sambamba, respectively. The code and scripts for running all workflows are freely available at https://github.com/abs-tudelft/ArrowSAM.",
                "authors": [
                    {
                        "name": "Ahmad T."
                    },
                    {
                        "name": "Ahmed N."
                    },
                    {
                        "name": "Al-Ars Z."
                    },
                    {
                        "name": "Peltenburg J."
                    }
                ],
                "date": "2020-03-01T00:00:00Z",
                "journal": "ICCAIS 2020 - 3rd International Conference on Computer Applications and Information Security",
                "title": "ArrowSAM: In-Memory Genomics Data Processing Using Apache Arrow"
            }
        },
        {
            "doi": "10.1186/s12864-020-07013-y",
            "metadata": {
                "abstract": "© 2020, The Author(s).Background: Immense improvements in sequencing technologies enable producing large amounts of high throughput and cost effective next-generation sequencing (NGS) data. This data needs to be processed efficiently for further downstream analyses. Computing systems need this large amounts of data closer to the processor (with low latency) for fast and efficient processing. However, existing workflows depend heavily on disk storage and access, to process this data incurs huge disk I/O overheads. Previously, due to the cost, volatility and other physical constraints of DRAM memory, it was not feasible to place large amounts of working data sets in memory. However, recent developments in storage-class memory and non-volatile memory technologies have enabled computing systems to place huge data in memory to process it directly from memory to avoid disk I/O bottlenecks. To exploit the benefits of such memory systems efficiently, proper formatted data placement in memory and its high throughput access is necessary by avoiding (de)-serialization and copy overheads in between processes. For this purpose, we use the newly developed Apache Arrow, a cross-language development framework that provides language-independent columnar in-memory data format for efficient in-memory big data analytics. This allows genomics applications developed in different programming languages to communicate in-memory without having to access disk storage and avoiding (de)-serialization and copy overheads. Implementation: We integrate Apache Arrow in-memory based Sequence Alignment/Map (SAM) format and its shared memory objects store library in widely used genomics high throughput data processing applications like BWA-MEM, Picard and GATK to allow in-memory communication between these applications. In addition, this also allows us to exploit the cache locality of tabular data and parallel processing capabilities through shared memory objects. Results: Our implementation shows that adopting in-memory SAM representation in genomics high throughput data processing applications results in better system resource utilization, low number of memory accesses due to high cache locality exploitation and parallel scalability due to shared memory objects. Our implementation focuses on the GATK best practices recommended workflows for germline analysis on whole genome sequencing (WGS) and whole exome sequencing (WES) data sets. We compare a number of existing in-memory data placing and sharing techniques like ramDisk and Unix pipes to show how columnar in-memory data representation outperforms both. We achieve a speedup of 4.85x and 4.76x for WGS and WES data, respectively, in overall execution time of variant calling workflows. Similarly, a speedup of 1.45x and 1.27x for these data sets, respectively, is achieved, as compared to the second fastest workflow. In some individual agents, particularly in sorting, duplicates removal and base quality score recalibration the speedup is even more promising. Availability: The code and scripts used in our experiments are available in both container and repository form at: https://github.com/abs-tudelft/ArrowSAM.",
                "authors": [
                    {
                        "name": "Ahmad T."
                    },
                    {
                        "name": "Ahmed N."
                    },
                    {
                        "name": "Al-Ars Z."
                    },
                    {
                        "name": "Hofstee H.P."
                    }
                ],
                "date": "2020-11-01T00:00:00Z",
                "journal": "BMC Genomics",
                "title": "Optimizing performance of GATK workflows using Apache Arrow In-Memory data framework"
            }
        }
    ],
    "topic": [
        {
            "term": "Exome sequencing",
            "uri": "http://edamontology.org/topic_3676"
        },
        {
            "term": "Whole genome sequencing",
            "uri": "http://edamontology.org/topic_3673"
        }
    ],
    "validated": 1
}
