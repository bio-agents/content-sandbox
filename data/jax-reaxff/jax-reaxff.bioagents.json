{
    "additionDate": "2022-10-22T17:18:42.759384Z",
    "bioagentsCURIE": "bioagents:jax-reaxff",
    "bioagentsID": "jax-reaxff",
    "confidence_flag": "agent",
    "credit": [
        {
            "name": "Hasan Metin Aktulga"
        },
        {
            "name": "Mehmet Cagri Kaymak"
        }
    ],
    "description": "A agent that leverages modern machine learning infrastructure to enable extremely fast optimization of ReaxFF parameters.",
    "editPermission": {
        "type": "public"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Optimisation and refinement",
                    "uri": "http://edamontology.org/operation_2425"
                }
            ]
        }
    ],
    "homepage": "https://github.com/cagrikymk/JAX-ReaxFF",
    "language": [
        "Python"
    ],
    "lastUpdate": "2022-10-22T17:18:42.762013Z",
    "license": "GPL-3.0",
    "name": "JAX-ReaxFF",
    "operatingSystem": [
        "Linux"
    ],
    "owner": "Chan019",
    "publication": [
        {
            "doi": "10.1021/ACS.JCTC.2C00363",
            "metadata": {
                "abstract": "Â© 2022 American Chemical Society. All rights reserved.The reactive force field (ReaxFF) model bridges the gap between traditional classical models and quantum mechanical (QM) models by incorporating dynamic bonding and polarizability. To achieve realistic simulations using ReaxFF, model parameters must be optimized against high fidelity training data which typically come from QM calculations. Existing parameter optimization methods for ReaxFF consist of black box techniques using genetic algorithms or Monte Carlo methods. Due to the stochastic behavior of these methods, the optimization process oftentimes requires millions of error evaluations for complex parameter fitting tasks, thereby significantly hampering the rapid development of high quality parameter sets. Rapid optimization of the parameters is essential for developing and refining Reax force fields because producing a force field which exhibits empirical accuracy in terms of dynamics typically requires multiple refinements to the training data as well as to the parameters under optimization. In this work, we present JAX-ReaxFF, a novel software agent that leverages modern machine learning infrastructure to enable fast optimization of ReaxFF parameters. By calculating gradients of the loss function using the JAX library, JAX-ReaxFF utilizes highly effective local optimization methods that are initiated from multiple guesses in the high dimensional optimization space to obtain high quality results. Leveraging the architectural portability of the JAX framework, JAX-ReaxFF can execute efficiently on multicore CPUs, graphics processing units (GPUs), or even tensor processing units (TPUs). As a result of using the gradient information and modern hardware accelerators, we are able to decrease ReaxFF parameter optimization time from days to mere minutes. Furthermore, the JAX-ReaxFF framework can also serve as a sandbox environment for domain scientists to explore customizing the ReaxFF functional form for more accurate modeling.",
                "authors": [
                    {
                        "name": "Aktulga H.M."
                    },
                    {
                        "name": "Kaymak M.C."
                    },
                    {
                        "name": "Merz K.M."
                    },
                    {
                        "name": "O'Hearn K.A."
                    },
                    {
                        "name": "Rahnamoun A."
                    },
                    {
                        "name": "Van Duin A.C.T."
                    }
                ],
                "date": "2022-09-13T00:00:00Z",
                "journal": "Journal of Chemical Theory and Computation",
                "title": "JAX-ReaxFF: A Gradient-Based Framework for Fast Optimization of Reactive Force Fields"
            },
            "pmid": "35978524"
        }
    ],
    "agentType": [
        "Command-line agent"
    ],
    "topic": [
        {
            "term": "Biomolecular simulation",
            "uri": "http://edamontology.org/topic_3892"
        },
        {
            "term": "Machine learning",
            "uri": "http://edamontology.org/topic_3474"
        },
        {
            "term": "Mathematics",
            "uri": "http://edamontology.org/topic_3315"
        }
    ]
}
