{
    "accessibility": "Open access",
    "additionDate": "2022-06-14T07:26:32.977295Z",
    "bioagentsCURIE": "bioagents:how_are_we_stranded_here",
    "bioagentsID": "how_are_we_stranded_here",
    "confidence_flag": "agent",
    "cost": "Free of charge",
    "credit": [
        {
            "email": "brandon.signal@utas.edu.au",
            "name": "Brandon Signal",
            "orcidid": "https://orcid.org/0000-0002-6839-2392",
            "typeEntity": "Person"
        }
    ],
    "description": "Python package for testing strandedness of RNA-Seq fastq files.",
    "editPermission": {
        "type": "public"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Standardisation and normalisation",
                    "uri": "http://edamontology.org/operation_3435"
                },
                {
                    "term": "Transcriptome assembly",
                    "uri": "http://edamontology.org/operation_3258"
                },
                {
                    "term": "Validation",
                    "uri": "http://edamontology.org/operation_2428"
                }
            ]
        }
    ],
    "homepage": "https://github.com/betsig/how_are_we_stranded_here",
    "language": [
        "Python"
    ],
    "lastUpdate": "2022-06-14T07:26:32.980910Z",
    "license": "MIT",
    "name": "how_are_we_stranded_here",
    "operatingSystem": [
        "Linux",
        "Mac",
        "Windows"
    ],
    "owner": "Chan019",
    "publication": [
        {
            "doi": "10.1186/S12859-022-04572-7",
            "metadata": {
                "abstract": "Â© 2022, The Author(s).Background: Quality control checks are the first step in RNA-Sequencing analysis, which enable the identification of common issues that occur in the sequenced reads. Checks for sequence quality, contamination, and complexity are commonplace, and allow users to implement steps downstream which can account for these issues. Strand-specificity of reads is frequently overlooked and is often unavailable even in published data, yet when unknown or incorrectly specified can have detrimental effects on the reproducibility and accuracy of downstream analyses. Results: To address these issues, we developed how_are_we_stranded_here, a Python library that helps to quickly infer strandedness of paired-end RNA-Sequencing data. Testing on both simulated and real RNA-Sequencing reads showed that it correctly measures strandedness, and measures outside the normal range may indicate sample contamination. Conclusions: how_are_we_stranded_here is fast and user friendly, making it easy to implement in quality control pipelines prior to analysing RNA-Sequencing data. how_are_we_stranded_here is freely available at https://github.com/betsig/how_are_we_stranded_here.",
                "authors": [
                    {
                        "name": "Kahlke T."
                    },
                    {
                        "name": "Signal B."
                    }
                ],
                "date": "2022-12-01T00:00:00Z",
                "journal": "BMC Bioinformatics",
                "title": "how_are_we_stranded_here: quick determination of RNA-Seq strandedness"
            },
            "pmcid": "PMC8783475",
            "pmid": "35065593"
        }
    ],
    "agentType": [
        "Library"
    ],
    "topic": [
        {
            "term": "Bioinformatics",
            "uri": "http://edamontology.org/topic_0091"
        },
        {
            "term": "Gene expression",
            "uri": "http://edamontology.org/topic_0203"
        },
        {
            "term": "Gene transcripts",
            "uri": "http://edamontology.org/topic_3512"
        },
        {
            "term": "Mapping",
            "uri": "http://edamontology.org/topic_0102"
        },
        {
            "term": "RNA-Seq",
            "uri": "http://edamontology.org/topic_3170"
        }
    ]
}
