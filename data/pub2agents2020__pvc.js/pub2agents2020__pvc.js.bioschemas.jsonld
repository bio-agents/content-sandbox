{
  "@context": {
    "bioagents": "https://bio.agents/ontology/",
    "bsc": "http://bioschemas.org/",
    "bsct": "http://bioschemas.org/types/",
    "dct": "http://purl.org/dc/terms/",
    "edam": "http://edamontology.org/",
    "owl": "http://www.w3.org/2002/07/owl#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "sc": "http://schema.org/",
    "xsd": "http://www.w3.org/2001/XMLSchema#"
  },
  "@graph": [
    {
      "@id": "https://doi.org/10.1016/J.HELIYON.2020.E03806",
      "@type": "sc:CreativeWork"
    },
    {
      "@id": "https://bio.agents/pub2agents2020__pvc.js",
      "@type": "sc:SoftwareApplication",
      "dct:conformsTo": "https://bioschemas.org/profiles/ComputationalAgent/0.6-DRAFT",
      "sc:applicationSubCategory": [
        {
          "@id": "edam:topic_3372"
        },
        {
          "@id": "edam:topic_3361"
        },
        {
          "@id": "edam:topic_3068"
        }
      ],
      "sc:citation": [
        "pubmed:32346639",
        "pmcid:PMC7182681",
        {
          "@id": "https://doi.org/10.1016/J.HELIYON.2020.E03806"
        }
      ],
      "sc:description": "visualizing C programs on web browsers for novices.\n\nMany researchers have proposed program visualization agents for memory management. Examples include state-of-the-art agents for C languages such as SeeC and Python Tutor (PT). However, three problems hinder the use of these and other agents: capability (P1), installability (P2), and usability (P3). (P1) Agents do not fully support dynamic memory allocation or File Input Output (I O) and Standard Input. (P2) Novice programmers often have difficulty installing SeeC due to its dependence on Clang and setting up an offline environment that uses PT. (P3) Revisualization of the modified source code in SeeC requires several steps. To alleviate these issues, we propose a new visualization agent called PlayVisualizerC.js (PVC.js). PVC.js, which is designed for novice C language programmers to provide solutions (S1-3) for P1-3. S1 offers complete support for dynamic memory allocation, standard I O, and file I O",
      "sc:featureList": {
        "@id": "edam:operation_0337"
      },
      "sc:name": "PVC.js",
      "sc:url": "https://github.com/RYOSKATE/PlayVisualizerC.js"
    }
  ]
}