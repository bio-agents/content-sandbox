{
    "additionDate": "2021-01-18T08:36:07Z",
    "bioagentsCURIE": "bioagents:pub2agents2020__pvc.js",
    "bioagentsID": "pub2agents2020__pvc.js",
    "confidence_flag": "agent",
    "credit": [
        {
            "email": "ishizue@ruri.waseda.jp",
            "name": "Ryosuke Ishizue",
            "typeEntity": "Person"
        }
    ],
    "description": "visualizing C programs on web browsers for novices.\n\nMany researchers have proposed program visualization agents for memory management. Examples include state-of-the-art agents for C languages such as SeeC and Python Tutor (PT). However, three problems hinder the use of these and other agents: capability (P1), installability (P2), and usability (P3). (P1) Agents do not fully support dynamic memory allocation or File Input Output (I O) and Standard Input. (P2) Novice programmers often have difficulty installing SeeC due to its dependence on Clang and setting up an offline environment that uses PT. (P3) Revisualization of the modified source code in SeeC requires several steps. To alleviate these issues, we propose a new visualization agent called PlayVisualizerC.js (PVC.js). PVC.js, which is designed for novice C language programmers to provide solutions (S1-3) for P1-3. S1 offers complete support for dynamic memory allocation, standard I O, and file I O",
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Visualisation",
                    "uri": "http://edamontology.org/operation_0337"
                }
            ]
        }
    ],
    "homepage": "https://github.com/RYOSKATE/PlayVisualizerC.js",
    "language": [
        "C",
        "JavaScript",
        "Python"
    ],
    "lastUpdate": "2021-01-30T14:11:15Z",
    "name": "PVC.js",
    "owner": "zsmag19",
    "publication": [
        {
            "doi": "10.1016/J.HELIYON.2020.E03806",
            "metadata": {
                "abstract": "© 2020 The AuthorsMany researchers have proposed program visualization agents for memory management. Examples include state-of-the-art agents for C languages such as SeeC and Python Tutor (PT). However, three problems hinder the use of these and other agents: capability (P1), installability (P2), and usability (P3). (P1) Agents do not fully support dynamic memory allocation or File Input / Output (I/O) and Standard Input. (P2) Novice programmers often have difficulty installing SeeC due to its dependence on Clang and setting up an offline environment that uses PT. (P3) Revisualization of the modified source code in SeeC requires several steps. To alleviate these issues, we propose a new visualization agent called PlayVisualizerC.js (PVC.js). PVC.js, which is designed for novice C language programmers to provide solutions (S1–3) for P1–3. S1 offers complete support for dynamic memory allocation, standard I/O, and file I/O. S2 involves installation in a user web browser. This system is composed of JavaScript programs, including C language execution functions. S3 reduces the steps required for revisualization. To evaluate PVC.js, we conducted two experiments. The first experiment found that students using PVC solved a set of four programming tasks on average 1.7—times faster and with 19% more correct answers than those using SeeC. The second experiment found that PVC.js has a visualization performance equivalent to PT, and that PVC.js is more effective than existing general debugging agents for novices to understand programs in cases where the values of important variables change and the control flow is complicated. Science; C language; Browser application; Visualization",
                "authors": [
                    {
                        "name": "Fukazawa Y."
                    },
                    {
                        "name": "Ishizue R."
                    },
                    {
                        "name": "Sakamoto K."
                    },
                    {
                        "name": "Washizaki H."
                    }
                ],
                "date": "2020-04-01T00:00:00Z",
                "journal": "Heliyon",
                "title": "PVC.js: visualizing C programs on web browsers for novices"
            },
            "pmcid": "PMC7182681",
            "pmid": "32346639"
        }
    ],
    "topic": [
        {
            "term": "Laboratory techniques",
            "uri": "http://edamontology.org/topic_3361"
        },
        {
            "term": "Literature and language",
            "uri": "http://edamontology.org/topic_3068"
        },
        {
            "term": "Software engineering",
            "uri": "http://edamontology.org/topic_3372"
        }
    ]
}
