{
  "@context": {
    "bioagents": "https://bio.agents/ontology/",
    "bsc": "http://bioschemas.org/",
    "bsct": "http://bioschemas.org/types/",
    "dct": "http://purl.org/dc/terms/",
    "edam": "http://edamontology.org/",
    "owl": "http://www.w3.org/2002/07/owl#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "sc": "http://schema.org/",
    "xsd": "http://www.w3.org/2001/XMLSchema#"
  },
  "@graph": [
    {
      "@id": "https://orcid.org/0000-0002-7277-1942",
      "@type": "schema:Person"
    },
    {
      "@id": "https://doi.org/10.1093/gigascience/giy157",
      "@type": "sc:CreativeWork"
    },
    {
      "@id": "https://bio.agents/lrgapcloser",
      "@type": "sc:SoftwareApplication",
      "bioagents:primaryContact": {
        "@id": "https://orcid.org/0000-0002-7277-1942"
      },
      "dct:conformsTo": "https://bioschemas.org/profiles/ComputationalAgent/0.6-DRAFT",
      "sc:additionalType": [
        "Script",
        "Command-line agent"
      ],
      "sc:applicationSubCategory": {
        "@id": "edam:topic_0196"
      },
      "sc:citation": {
        "@id": "https://doi.org/10.1093/gigascience/giy157"
      },
      "sc:description": "LR_Gapcloser is a gap closing agent using long reads from studied species. The long reads could be downloaed from public read archive database (for instance, NCBI SRA database ) or be your own data. Then they are fragmented and aligned to scaffolds using BWA mem algorithm in BWA package. In the package, we provided a compiled bwa, so the user needn't to install bwa. LR_Gapcloser uses the alignments to find the bridging that cross the gap, and then fills the long read original sequence into the genomic gaps.",
      "sc:featureList": {
        "@id": "edam:operation_3217"
      },
      "sc:isAccessibleForFree": true,
      "sc:license": "GPL-3.0",
      "sc:name": "LR_Gapcloser",
      "sc:url": "https://github.com/CAFS-bioinformatics/LR_Gapcloser"
    }
  ]
}