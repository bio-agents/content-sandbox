{
  "@context": {
    "bioagents": "https://bio.agents/ontology/",
    "bsc": "http://bioschemas.org/",
    "bsct": "http://bioschemas.org/types/",
    "dct": "http://purl.org/dc/terms/",
    "edam": "http://edamontology.org/",
    "owl": "http://www.w3.org/2002/07/owl#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "sc": "http://schema.org/",
    "xsd": "http://www.w3.org/2001/XMLSchema#"
  },
  "@graph": [
    {
      "@id": "https://bio.agents/BeamDelta",
      "@type": "sc:SoftwareApplication",
      "dct:conformsTo": "https://bioschemas.org/profiles/ComputationalAgent/0.6-DRAFT",
      "sc:applicationSubCategory": [
        {
          "@id": "edam:topic_0081"
        },
        {
          "@id": "edam:topic_3068"
        },
        {
          "@id": "edam:topic_3306"
        },
        {
          "@id": "edam:topic_3385"
        },
        {
          "@id": "edam:topic_0196"
        }
      ],
      "sc:citation": {
        "@id": "https://doi.org/10.12688/WELLCOMEOPENRES.15576.1"
      },
      "sc:description": "simple alignment agent for optical systems.\n\nBeamDelta is called from the command line using the following format:.\n\nA simple GUI interface for python-microscope which allows a compatible camera (see python-microscope compatibility list) to be used for optical alignment purposes. The GUI will display live images, calculate and mark beam centroids and then store an alignment centroid position. Once a position is stored the live centroid then displays a pixel based delta position to allow precise alignment between the marked position and the new beam.\n\nWe include a suggested parts list in BeamDelta-parts-list.csv which enables the construction of a two camera alignment setup. This hardware configuration will allow both lens alignment and co-aligning two beams and has a small footprint so can relatively easily be mounted within an existing setup",
      "sc:featureList": [
        {
          "@id": "edam:operation_3435"
        },
        {
          "@id": "edam:operation_0310"
        },
        {
          "@id": "edam:operation_0292"
        }
      ],
      "sc:license": "GPL-3.0",
      "sc:name": "BeamDelta",
      "sc:url": "https://github.com/MicronOxford/BeamDelta"
    },
    {
      "@id": "https://doi.org/10.12688/WELLCOMEOPENRES.15576.1",
      "@type": "sc:CreativeWork"
    }
  ]
}