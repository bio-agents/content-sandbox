{
    "additionDate": "2021-01-18T10:19:05Z",
    "bioagentsCURIE": "bioagents:lrod",
    "bioagentsID": "lrod",
    "confidence_flag": "agent",
    "credit": [
        {
            "email": "hzq@hpu.edu.cn",
            "name": "Zhanqiang Huo",
            "typeEntity": "Person"
        }
    ],
    "description": "An Overlap Detection Algorithm for Long Reads Based on k-mer Distribution.\n\nLROD can detect overlap regions among long reads.",
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Genome assembly",
                    "uri": "http://edamontology.org/operation_0525"
                },
                {
                    "term": "Read mapping",
                    "uri": "http://edamontology.org/operation_3198"
                },
                {
                    "term": "k-mer counting",
                    "uri": "http://edamontology.org/operation_3472"
                }
            ]
        }
    ],
    "homepage": "https://github.com/luojunwei/LROD",
    "language": [
        "C++"
    ],
    "lastUpdate": "2021-02-19T08:02:48Z",
    "name": "LROD",
    "owner": "Niclaskn",
    "publication": [
        {
            "doi": "10.3389/FGENE.2020.00632",
            "metadata": {
                "abstract": "© Copyright © 2020 Luo, Chen, Zhang, Wang, Luo, Yan and Huo.Third-generation sequencing technologies can produce large numbers of long reads, which have been widely used in many fields. When using long reads for genome assembly, overlap detection between any pair of long reads is an important step. However, the sequencing error rate of third-generation sequencing technologies is very high, and obtaining accurate overlap detection results is still a challenging task. In this study, we present a long-read overlap detection (LROD) algorithm that can improve the accuracy of overlap detection results. To detect overlaps between two long reads, LROD first retains only the solid common k-mers between them. These k-mers can simplify the process of overlap detection. Second, LROD finds a chain (i.e., candidate overlap) that includes the consistent common k-mers. In this step, LROD proposes a two-stage strategy to evaluate whether two common k-mers are consistent. Finally, LROD uses a novel strategy to determine whether the candidate overlaps are true and to revise them. To verify the performance of LROD, three simulated and three real long-read datasets are used in the experiments. Compared with two other popular methods (MHAP and Minimap2), LROD can achieve good performance in terms of the F1-score, precision and recall. LROD is available from https://github.com/luojunwei/LROD.",
                "authors": [
                    {
                        "name": "Chen R."
                    },
                    {
                        "name": "Huo Z."
                    },
                    {
                        "name": "Luo H."
                    },
                    {
                        "name": "Luo J."
                    },
                    {
                        "name": "Wang Y."
                    },
                    {
                        "name": "Yan C."
                    },
                    {
                        "name": "Zhang X."
                    }
                ],
                "date": "2020-07-29T00:00:00Z",
                "journal": "Frontiers in Genetics",
                "title": "LROD: An Overlap Detection Algorithm for Long Reads Based on k-mer Distribution"
            },
            "pmcid": "PMC7403501",
            "pmid": "32849762"
        }
    ],
    "agentType": [
        "Command-line agent"
    ],
    "topic": [
        {
            "term": "Sequence assembly",
            "uri": "http://edamontology.org/topic_0196"
        },
        {
            "term": "Sequencing",
            "uri": "http://edamontology.org/topic_3168"
        },
        {
            "term": "Structure analysis",
            "uri": "http://edamontology.org/topic_0081"
        }
    ]
}
