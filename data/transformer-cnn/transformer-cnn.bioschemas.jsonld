{
  "@context": {
    "bioagents": "https://bio.agents/ontology/",
    "bsc": "http://bioschemas.org/",
    "bsct": "http://bioschemas.org/types/",
    "dct": "http://purl.org/dc/terms/",
    "edam": "http://edamontology.org/",
    "owl": "http://www.w3.org/2002/07/owl#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "sc": "http://schema.org/",
    "xsd": "http://www.w3.org/2001/XMLSchema#"
  },
  "@graph": [
    {
      "@id": "https://bio.agents/Transformer-CNN",
      "@type": "sc:SoftwareApplication",
      "dct:conformsTo": "https://bioschemas.org/profiles/ComputationalAgent/0.6-DRAFT",
      "sc:applicationSubCategory": [
        {
          "@id": "edam:topic_3474"
        },
        {
          "@id": "edam:topic_3382"
        },
        {
          "@id": "edam:topic_2258"
        }
      ],
      "sc:citation": {
        "@id": "https://doi.org/10.26434/CHEMRXIV.9961787.V1"
      },
      "sc:description": "Fast and Reliable Agent for QSAR.\n\nTransformer CNN for QSAR/QSPR modelling.\n\nThe repository contains the source code for a new Transformer-CNN method described in our paper http://arxiv.org/abs/1911.06603. First, we trained the Transformer model on SMILES canonicalization task, e.g., given an arbitrary SMILES, the model converts it to a canonical one. Second, we use the internal representation of the Transformer (the output of the encoding stack with shape (BATCH, LENGTH, EMBEDDING)) as SMILES embeddings and build upon them CharNN model (Convolution and HighWay as it is done in DeepChem). The resulting model works both in classification and regression settings",
      "sc:featureList": {
        "@id": "edam:operation_3659"
      },
      "sc:name": "Transformer-CNN",
      "sc:url": "https://github.com/bigchem/transformer-cnn"
    },
    {
      "@id": "https://doi.org/10.26434/CHEMRXIV.9961787.V1",
      "@type": "sc:CreativeWork"
    }
  ]
}