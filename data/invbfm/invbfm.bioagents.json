{
    "additionDate": "2021-01-18T07:57:07Z",
    "bioagentsCURIE": "bioagents:invbfm",
    "bioagentsID": "invbfm",
    "confidence_flag": "agent",
    "credit": [
        {
            "email": "gaojy@mail.buct.edu.cn",
            "name": "Jingyang Gao",
            "typeEntity": "Person"
        }
    ],
    "description": "Finding genomic inversions from high-throughput sequence data based on feature mining.\n\nWe released three programs, InvBFM, fixRealData, and fixSimuData.\n\nBoth fixRealData and fixSimuData are written in Shell for data preprocessing. InvBFM is written in Python which proposed in our paper.All three programs are packaged as executables, downloading from their source code and changed their permissions to executable for using as a agent.",
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Essential dynamics",
                    "uri": "http://edamontology.org/operation_3891"
                },
                {
                    "term": "Feature extraction",
                    "uri": "http://edamontology.org/operation_3937"
                },
                {
                    "term": "Sequence assembly",
                    "uri": "http://edamontology.org/operation_0310"
                }
            ]
        }
    ],
    "homepage": "https://github.com/wzj1234/InvBFM",
    "language": [
        "Python",
        "Shell"
    ],
    "lastUpdate": "2021-02-05T07:37:29Z",
    "name": "InvBFM",
    "owner": "Niclaskn",
    "publication": [
        {
            "doi": "10.1186/S12864-020-6585-1",
            "metadata": {
                "abstract": "Â© 2020 The Author(s).Background: Genomic inversion is one type of structural variations (SVs) and is known to play an important biological role. An established problem in sequence data analysis is calling inversions from high-throughput sequence data. It is more difficult to detect inversions because they are surrounded by duplication or other types of SVs in the inversion areas. Existing inversion detection agents are mainly based on three approaches: paired-end reads, split-mapped reads, and assembly. However, existing agents suffer from unsatisfying precision or sensitivity (eg: only 50~60% sensitivity) and it needs to be improved. Result: In this paper, we present a new inversion calling method called InvBFM. InvBFM calls inversions based on feature mining. InvBFM first gathers the results of existing inversion detection agents as candidates for inversions. It then extracts features from the inversions. Finally, it calls the true inversions by a trained support vector machine (SVM) classifier. Conclusions: Our results on real sequence data from the 1000 Genomes Project show that by combining feature mining and a machine learning model, InvBFM outperforms existing agents. InvBFM is written in Python and Shell and is available for download at https://github.com/wzj1234/InvBFM.",
                "authors": [
                    {
                        "name": "Gao J."
                    },
                    {
                        "name": "Wu Y."
                    },
                    {
                        "name": "Wu Z."
                    }
                ],
                "date": "2020-03-05T00:00:00Z",
                "journal": "BMC Genomics",
                "title": "InvBFM: Finding genomic inversions from high-throughput sequence data based on feature mining"
            },
            "pmcid": "PMC7057458",
            "pmid": "32138660"
        }
    ],
    "agentType": [
        "Command-line agent"
    ],
    "topic": [
        {
            "term": "DNA structural variation",
            "uri": "http://edamontology.org/topic_3175"
        },
        {
            "term": "Data mining",
            "uri": "http://edamontology.org/topic_3473"
        },
        {
            "term": "Mapping",
            "uri": "http://edamontology.org/topic_0102"
        },
        {
            "term": "Sequence assembly",
            "uri": "http://edamontology.org/topic_0196"
        },
        {
            "term": "Sequencing",
            "uri": "http://edamontology.org/topic_3168"
        }
    ]
}
