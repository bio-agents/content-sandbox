{
    "accessibility": "Open access",
    "additionDate": "2022-03-30T20:08:41.785412Z",
    "bioagentsCURIE": "bioagents:pymonnto",
    "bioagentsID": "pymonnto",
    "confidence_flag": "agent",
    "cost": "Free of charge",
    "credit": [
        {
            "email": "triesch@fias.uni-frankfurt.de",
            "name": "Jochen Triesch",
            "typeEntity": "Person"
        },
        {
            "email": "vieth@fias.uni-frankfurt.de",
            "name": "Marius Vieth",
            "typeEntity": "Person"
        },
        {
            "name": "Tristan M. Stöber"
        }
    ],
    "description": "The \"Python Modular Neural Network Agentbox\" allows you to create neuron groups, define their behaviour and connect them with synapse groups.",
    "documentation": [
        {
            "type": [
                "User manual"
            ],
            "url": "https://pymonnto.readthedocs.io"
        }
    ],
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Network analysis",
                    "uri": "http://edamontology.org/operation_3927"
                },
                {
                    "term": "Visualisation",
                    "uri": "http://edamontology.org/operation_0337"
                }
            ]
        }
    ],
    "homepage": "https://github.com/trieschlab/PymoNNto",
    "language": [
        "Python"
    ],
    "lastUpdate": "2022-03-30T20:08:41.787989Z",
    "license": "Not licensed",
    "name": "PymoNNto",
    "operatingSystem": [
        "Linux",
        "Mac",
        "Windows"
    ],
    "owner": "Jennifer",
    "publication": [
        {
            "doi": "10.3389/FNINF.2021.715131",
            "metadata": {
                "abstract": "© Copyright © 2021 Vieth, Stöber and Triesch.The Python Modular Neural Network Agentbox (PymoNNto) provides a versatile and adaptable Python-based framework to develop and investigate brain-inspired neural networks. In contrast to other commonly used simulators such as Brian2 and NEST, PymoNNto imposes only minimal restrictions for implementation and execution. The basic structure of PymoNNto consists of one network class with several neuron- and synapse-groups. The behaviour of each group can be flexibly defined by exchangeable modules. The implementation of these modules is up to the user and only limited by Python itself. Behaviours can be implemented in Python, Numpy, Tensorflow, and other libraries to perform computations on CPUs and GPUs. PymoNNto comes with convenient high level behaviour modules, allowing differential equation-based implementations similar to Brian2, and an adaptable modular Graphical User Interface for real-time observation and modification of the simulated network and its parameters.",
                "authors": [
                    {
                        "name": "Stober T.M."
                    },
                    {
                        "name": "Triesch J."
                    },
                    {
                        "name": "Vieth M."
                    }
                ],
                "date": "2021-11-01T00:00:00Z",
                "journal": "Frontiers in Neuroinformatics",
                "title": "PymoNNto: A Flexible Modular Agentbox for Designing Brain-Inspired Neural Networks"
            },
            "pmcid": "PMC8591031",
            "pmid": "34790108"
        }
    ],
    "agentType": [
        "Library"
    ],
    "topic": [
        {
            "term": "ChIP-on-chip",
            "uri": "http://edamontology.org/topic_3179"
        },
        {
            "term": "Evolutionary biology",
            "uri": "http://edamontology.org/topic_3299"
        },
        {
            "term": "Machine learning",
            "uri": "http://edamontology.org/topic_3474"
        }
    ]
}
