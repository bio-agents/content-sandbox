{
  "@context": {
    "bioagents": "https://bio.agents/ontology/",
    "bsc": "http://bioschemas.org/",
    "bsct": "http://bioschemas.org/types/",
    "dct": "http://purl.org/dc/terms/",
    "edam": "http://edamontology.org/",
    "owl": "http://www.w3.org/2002/07/owl#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "sc": "http://schema.org/",
    "xsd": "http://www.w3.org/2001/XMLSchema#"
  },
  "@graph": [
    {
      "@id": "https://bio.agents/phrapumd",
      "@type": "sc:SoftwareApplication",
      "dct:conformsTo": "https://bioschemas.org/profiles/ComputationalAgent/0.6-DRAFT",
      "sc:additionalType": "Command-line agent",
      "sc:applicationSubCategory": {
        "@id": "edam:topic_0196"
      },
      "sc:citation": {
        "@id": "https://doi.org/10.1371/journal.pone.0001836"
      },
      "sc:description": "It consists of the UMD Trimmer, UMD Overlapper and a modified version of Phrap.It is capable of assembling data downloaded directly from the NCBI Trace Archive. The pipeline runs in 3 stages:  first the vector ends of the reads are examined and the vector is found.  Then the reads are trimmed for vector and quality.  After that the trimmed reads afe fed into the 5-pass UMD Overlapper that finds the overlaps, corrects the base caller errors and performs additional trimming if necessary.",
      "sc:featureList": {
        "@id": "edam:operation_3192"
      },
      "sc:name": "PhrapUMD",
      "sc:operatingSystem": "Linux",
      "sc:softwareVersion": "2",
      "sc:url": "http://www.glue.umd.edu/~ALEKSEYZ/PhrapUMDV2"
    },
    {
      "@id": "https://doi.org/10.1371/journal.pone.0001836",
      "@type": "sc:CreativeWork"
    }
  ]
}