{
    "accessibility": "Open access",
    "additionDate": "2022-11-04T10:04:16.277179Z",
    "bioagentsCURIE": "bioagents:gnocis",
    "bioagentsID": "gnocis",
    "confidence_flag": "agent",
    "cost": "Free of charge",
    "credit": [
        {
            "email": "bjorn.a.bredesen@ntnu.no",
            "name": "Bjørn André Bredesen-Aa",
            "orcidid": "https://orcid.org/0000-0001-7171-2265",
            "typeEntity": "Person"
        },
        {
            "name": "Marc Rehmsmeier"
        }
    ],
    "description": "Gnocis, a Python package that streamlines the analysis and the modelling of CRE sequences by providing extensible APIs and implementing the glue required for combining feature sets and models for genome-wide prediction.",
    "documentation": [
        {
            "type": [
                "General"
            ],
            "url": "https://bjornbredesen.github.io/gnocis/"
        },
        {
            "type": [
                "Training material"
            ],
            "url": "https://github.com/bjornbredesen/gnocis/tree/master/tutorial/tutorial.ipynb"
        }
    ],
    "editPermission": {
        "type": "public"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Network analysis",
                    "uri": "http://edamontology.org/operation_3927"
                },
                {
                    "term": "Sequence motif analysis",
                    "uri": "http://edamontology.org/operation_2404"
                },
                {
                    "term": "Transcriptional regulatory element prediction",
                    "uri": "http://edamontology.org/operation_0438"
                }
            ]
        }
    ],
    "homepage": "https://github.com/bjornbredesen/gnocis",
    "language": [
        "Python"
    ],
    "lastUpdate": "2022-11-04T10:04:16.279661Z",
    "license": "MIT",
    "name": "Gnocis",
    "operatingSystem": [
        "Linux",
        "Mac",
        "Windows"
    ],
    "owner": "Chan019",
    "publication": [
        {
            "doi": "10.1371/JOURNAL.PONE.0274338",
            "metadata": {
                "abstract": "© 2022 Bredesen-Aa, Rehmsmeier. This is an open access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.Gene expression is regulated through cis-regulatory elements (CREs), among which are promoters, enhancers, Polycomb/Trithorax Response Elements (PREs), silencers and insulators. Computational prediction of CREs can be achieved using a variety of statistical and machine learning methods combined with different feature space formulations. Although Python packages for DNA sequence feature sets and for machine learning are available, no existing package facilitates the combination of DNA sequence feature sets with machine learning methods for the genome-wide prediction of candidate CREs. We here present Gnocis, a Python package that streamlines the analysis and the modelling of CRE sequences by providing extensible APIs and implementing the glue required for combining feature sets and models for genome-wide prediction. Gnocis implements a variety of base feature sets, including motif pair occurrence frequencies and the k-spectrum mismatch kernel. It integrates with Scikit-learn and TensorFlow for state-of-the-art machine learning. Gnocis additionally implements a broad suite of agents for the handling and preparation of sequence, region and curve data, which can be useful for general DNA bioinformatics in Python. We also present Deep-MOCCA, a neural network architecture inspired by SVM-MOCCA that achieves moderate to high generalization without prior motif knowledge. To demonstrate the use of Gnocis, we applied multiple machine learning methods to the modelling of D. melanogaster PREs, including a Convolutional Neural Network (CNN), making this the first study to model PREs with CNNs. The models are readily adapted to new CRE modelling problems and to other organisms. In order to produce a high-performance, compiled package for Python 3, we implemented Gnocis in Cython. Gnocis can be installed using the PyPI package manager by running ‘pip install gnocis’. The source code is available on GitHub, at https://github.com/bjornbredesen/gnocis.",
                "authors": [
                    {
                        "name": "Bredesen-Aa B.A."
                    },
                    {
                        "name": "Rehmsmeier M."
                    }
                ],
                "date": "2022-09-01T00:00:00Z",
                "journal": "PLoS ONE",
                "title": "Gnocis: An integrated system for interactive and reproducible analysis and modelling of cis-regulatory elements in Python 3"
            },
            "pmcid": "PMC9462789",
            "pmid": "36084008"
        }
    ],
    "agentType": [
        "Library"
    ],
    "topic": [
        {
            "term": "Epigenetics",
            "uri": "http://edamontology.org/topic_3295"
        },
        {
            "term": "Machine learning",
            "uri": "http://edamontology.org/topic_3474"
        },
        {
            "term": "Model organisms",
            "uri": "http://edamontology.org/topic_0621"
        },
        {
            "term": "Sequencing",
            "uri": "http://edamontology.org/topic_3168"
        },
        {
            "term": "Transcription factors and regulatory sites",
            "uri": "http://edamontology.org/topic_0749"
        }
    ]
}
