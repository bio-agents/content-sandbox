{
    "additionDate": "2020-01-14T09:09:26Z",
    "bioagentsCURIE": "bioagents:SWAPCounter",
    "bioagentsID": "SWAPCounter",
    "confidence_flag": "agent",
    "description": "Counting Kmers for Biological Sequences at Large Scale.\n\nThis is a distributed kmer counting agents for TB-PB sequencing dataset",
    "editPermission": {
        "type": "public"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "De-novo assembly",
                    "uri": "http://edamontology.org/operation_0524"
                },
                {
                    "term": "Filtering",
                    "uri": "http://edamontology.org/operation_3695"
                },
                {
                    "term": "k-mer counting",
                    "uri": "http://edamontology.org/operation_3472"
                }
            ]
        }
    ],
    "homepage": "https://github.com/mengjintao/SWAPCounter",
    "language": [
        "C++"
    ],
    "lastUpdate": "2020-12-27T12:45:34Z",
    "name": "SWAPCounter",
    "owner": "Pub2Agents",
    "publication": [
        {
            "doi": "10.1007/S12539-019-00348-5",
            "metadata": {
                "abstract": "Â© 2019, International Association of Scientists in the Interdisciplinary Areas.Counting the abundance of all the distinct kmers in biological sequence data is a fundamental step in bioinformatics. These applications include de novo genome assembly, error correction, etc. With the development of sequencing technology, the sequence data in a single project can reach Petabyte-scale or Terabyte-scale nucleotides. Counting demand for the abundance of these sequencing data is beyond the memory and computing capacity of single computing node, and how to process it efficiently is a challenge on a high-performance computing cluster. As such, we propose SWAPCounter, a highly scalable distributed approach for kmer counting. This approach is embedded with an MPI streaming I/O module for loading huge data set at high speed, and a counting bloom filter module for both memory and communication efficiency. By overlapping all the counting steps, SWAPCounter achieves high scalability with high parallel efficiency. The experimental results indicate that SWAPCounter has competitive performance with two other agents on shared memory environment, KMC2, and MSPKmerCounter. Moreover, SWAPCounter also shows the highest scalability under strong scaling experiments. In our experiment on Cetus supercomputer, SWAPCounter scales to 32,768 cores with 79% parallel efficiency (using 2048 cores as baseline) when processing 4 TB sequence data of 1000 Genomes. The source code of SWAPCounter is publicly available at https://github.com/mengjintao/SWAPCounter.",
                "authors": [
                    {
                        "name": "Balaji P."
                    },
                    {
                        "name": "Feng S."
                    },
                    {
                        "name": "Ge J."
                    },
                    {
                        "name": "Guo N."
                    },
                    {
                        "name": "Meng J."
                    },
                    {
                        "name": "Wei Y."
                    }
                ],
                "citationCount": 1,
                "date": "2020-03-01T00:00:00Z",
                "journal": "Interdisciplinary Sciences: Computational Life Sciences",
                "title": "Counting Kmers for Biological Sequences at Large Scale"
            },
            "pmid": "31734873"
        }
    ],
    "topic": [
        {
            "term": "Computer science",
            "uri": "http://edamontology.org/topic_3316"
        },
        {
            "term": "Sequence assembly",
            "uri": "http://edamontology.org/topic_0196"
        },
        {
            "term": "Sequencing",
            "uri": "http://edamontology.org/topic_3168"
        }
    ],
    "validated": 1
}
