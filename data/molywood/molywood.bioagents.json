{
    "additionDate": "2021-01-18T09:31:26Z",
    "bioagentsCURIE": "bioagents:molywood",
    "bioagentsID": "molywood",
    "confidence_flag": "agent",
    "credit": [
        {
            "email": "milosz.wieczor@pg.edu.pl",
            "name": "Miłosz Wieczór",
            "typeEntity": "Person"
        },
        {
            "email": "modesto.orozco@irbbarcelona.org",
            "name": "Modesto Orozco",
            "typeEntity": "Person"
        }
    ],
    "description": "Streamlining the design and rendering of molecular movies.\n\nA Python script to automate the production of molecular movies in VMD.\n\nMolywood is there to make cool molecular movies for you.\n\nSpecifically, molywood automatizes the most tedious steps in generation of these movies, i.e. scripting in TCL, rendering, generating overlays and combining frames, as well as merging frames into the final movie:.",
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Deposition",
                    "uri": "http://edamontology.org/operation_3431"
                },
                {
                    "term": "Molecular dynamics",
                    "uri": "http://edamontology.org/operation_2476"
                },
                {
                    "term": "Visualisation",
                    "uri": "http://edamontology.org/operation_0337"
                }
            ]
        }
    ],
    "homepage": "http://gitlab.com/KomBioMol/molywood",
    "language": [
        "Python"
    ],
    "lastUpdate": "2021-02-26T09:33:38Z",
    "link": [
        {
            "type": [
                "Other"
            ],
            "url": "https://mmb.irbbarcelona.org/molywood"
        }
    ],
    "name": "Molywood",
    "owner": "Niclaskn",
    "publication": [
        {
            "doi": "10.1093/BIOINFORMATICS/BTAA584",
            "metadata": {
                "abstract": "© The Author(s) 2020. Published by Oxford University Press.Motivation: High-quality dynamic visuals are needed at all levels of science communication, from the conference hall to the classroom. As scientific journals embrace new article formats, many key concepts-particularly, in structural biology-are also more easily conveyed as videos than still frames. Notwithstanding, the design and rendering of a complex molecular movie remain an arduous task. Here, we introduce Molywood, a robust and intuitive agent that builds on the capabilities of Visual Molecular Dynamics (VMD) to automate all stages of movie rendering. Results: Molywood is a Python-based script that uses an integrated workflow to give maximal flexibility in movie design. It implements the basic concepts of actions, layers, grids and concurrency and requires no programming experience to run. Availability and implementation: The script is freely available on GitLab (gitlab.com/KomBioMol/molywood) and PyPI (through pip), and features an extended documentation, tutorial and gallery hosted on mmb.irbbarcelona.org/ molywood.",
                "authors": [
                    {
                        "name": "Bayarri G."
                    },
                    {
                        "name": "Czub J."
                    },
                    {
                        "name": "Hospital A."
                    },
                    {
                        "name": "Orozco M."
                    },
                    {
                        "name": "Wieczor M."
                    }
                ],
                "citationCount": 1,
                "date": "2020-09-01T00:00:00Z",
                "journal": "Bioinformatics",
                "title": "Molywood: Streamlining the design and rendering of molecular movies"
            },
            "pmid": "32573714"
        }
    ],
    "agentType": [
        "Library"
    ],
    "topic": [
        {
            "term": "Imaging",
            "uri": "http://edamontology.org/topic_3382"
        },
        {
            "term": "Molecular dynamics",
            "uri": "http://edamontology.org/topic_0176"
        },
        {
            "term": "Workflows",
            "uri": "http://edamontology.org/topic_0769"
        },
        {
            "term": "Zoology",
            "uri": "http://edamontology.org/topic_3500"
        }
    ]
}
