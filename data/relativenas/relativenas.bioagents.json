{
    "accessibility": "Open access",
    "additionDate": "2021-11-21T22:00:42.008659Z",
    "bioagentsCURIE": "bioagents:relativenas",
    "bioagentsID": "relativenas",
    "confidence_flag": "agent",
    "cost": "Free of charge",
    "credit": [
        {
            "name": "Hao Tan"
        },
        {
            "name": "Ping Luo"
        },
        {
            "name": "Ran Cheng"
        }
    ],
    "description": "Relative Neural Architecture Search via Slow-Fast Learning",
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Database search",
                    "uri": "http://edamontology.org/operation_2421"
                }
            ]
        }
    ],
    "homepage": "https://github.com/EMI-Group/RelativeNAS",
    "language": [
        "Python"
    ],
    "lastUpdate": "2021-11-21T22:00:42.011154Z",
    "license": "Not licensed",
    "link": [
        {
            "type": [
                "Repository"
            ],
            "url": "https://github.com/EMI-Group/RelativeNAS"
        }
    ],
    "name": "RelativeNAS",
    "operatingSystem": [
        "Linux",
        "Mac",
        "Windows"
    ],
    "owner": "Jennifer",
    "publication": [
        {
            "doi": "10.1109/TNNLS.2021.3096658",
            "metadata": {
                "abstract": "IEEEDespite the remarkable successes of convolutional neural networks (CNNs) in computer vision, it is time-consuming and error-prone to manually design a CNN. Among various neural architecture search (NAS) methods that are motivated to automate designs of high-performance CNNs, the differentiable NAS and population-based NAS are attracting increasing interests due to their unique characters. To benefit from the merits while overcoming the deficiencies of both, this work proposes a novel NAS method, RelativeNAS. As the key to efficient search, RelativeNAS performs joint learning between fast learners (i.e., decoded networks with relatively lower loss value) and slow learners in a pairwise manner. Moreover, since RelativeNAS only requires low-fidelity performance estimation to distinguish each pair of fast learner and slow learner, it saves certain computation costs for training the candidate architectures. The proposed RelativeNAS brings several unique advantages: 1) it achieves state-of-the-art performances on ImageNet with top-1 error rate of 24.88&#x0025;, that is, outperforming DARTS and AmoebaNet-B by 1.82&#x0025; and 1.12&#x0025;, respectively; 2) it spends only 9 h with a single 1080Ti GPU to obtain the discovered cells, that is, 3.75x and 7875x faster than DARTS and AmoebaNet, respectively; and 3) it provides that the discovered cells obtained on CIFAR-10 can be directly transferred to object detection, semantic segmentation, and keypoint detection, yielding competitive results of 73.1&#x0025; mAP on PASCAL VOC, 78.7&#x0025; mIoU on Cityscapes, and 68.5&#x0025; AP on MSCOCO, respectively. The implementation of RelativeNAS is available at https://github.com/EMI-Group/RelativeNAS.",
                "authors": [
                    {
                        "name": "Cheng R."
                    },
                    {
                        "name": "He C."
                    },
                    {
                        "name": "Huang S."
                    },
                    {
                        "name": "Luo P."
                    },
                    {
                        "name": "Qiu C."
                    },
                    {
                        "name": "Tan H."
                    },
                    {
                        "name": "Yang F."
                    }
                ],
                "date": "2021-01-01T00:00:00Z",
                "journal": "IEEE Transactions on Neural Networks and Learning Systems",
                "title": "RelativeNAS: Relative Neural Architecture Search via Slow-Fast Learning"
            },
            "pmid": "34270436"
        }
    ],
    "agentType": [
        "Library"
    ],
    "topic": [
        {
            "term": "Imaging",
            "uri": "http://edamontology.org/topic_3382"
        },
        {
            "term": "Machine learning",
            "uri": "http://edamontology.org/topic_3474"
        }
    ]
}
