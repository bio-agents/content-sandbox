{
    "accessibility": "Open access",
    "additionDate": "2022-09-17T00:11:04.912914Z",
    "bioagentsCURIE": "bioagents:fraggenescanrs",
    "bioagentsID": "fraggenescanrs",
    "confidence_flag": "agent",
    "cost": "Free of charge",
    "credit": [
        {
            "name": "Bart Mesuere"
        },
        {
            "name": "Peter Dawyndt"
        },
        {
            "name": "Felix Van der Jeugt",
            "orcidid": "https://orcid.org/0000-0003-3168-927X",
            "typeEntity": "Person"
        }
    ],
    "description": "FragGeneScanRs is written in Rust, so first head over to their installation instructions. Afterwards, you can install the crate from crates.io with cargo install frag_gene_scan_rs The installation progress may prompt you to add a directory to your path so you can easily execute it.",
    "download": [
        {
            "type": "Source code",
            "url": "https://github.com/unipept/FragGeneScanRs/tree/main/example"
        }
    ],
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Data handling",
                    "uri": "http://edamontology.org/operation_2409"
                },
                {
                    "term": "Gene prediction",
                    "uri": "http://edamontology.org/operation_2454"
                },
                {
                    "term": "Sequence assembly",
                    "uri": "http://edamontology.org/operation_0310"
                }
            ]
        }
    ],
    "homepage": "https://github.com/unipept/FragGeneScanRs",
    "language": [
        "Python"
    ],
    "lastUpdate": "2022-09-17T00:11:58.998218Z",
    "license": "GPL-3.0",
    "name": "FragGeneScanRs",
    "operatingSystem": [
        "Linux",
        "Mac",
        "Windows"
    ],
    "owner": "Jennifer",
    "publication": [
        {
            "doi": "10.1186/S12859-022-04736-5",
            "metadata": {
                "abstract": "Â© 2022, The Author(s).Background: FragGeneScan is currently the most accurate and popular agent for gene prediction in short and error-prone reads, but its execution speed is insufficient for use on larger data sets. The parallelization which should have addressed this is inefficient. Its alternative implementation FragGeneScan+ is faster, but introduced a number of bugs related to memory management, race conditions and even output accuracy. Results: This paper introduces FragGeneScanRs, a faster Rust implementation of the FragGeneScan gene prediction model. Its command line interface is backward compatible and adds extra features for more flexible usage. Its output is equivalent to the original FragGeneScan implementation. Conclusions: Compared to the current C implementation, shotgun metagenomic reads are processed up to 22 times faster using a single thread, with better scaling for multithreaded execution. The Rust code of FragGeneScanRs is freely available from GitHub under the GPL-3.0 license with instructions for installation, usage and other documentation (https://github.com/unipept/FragGeneScanRs).",
                "authors": [
                    {
                        "name": "Dawyndt P."
                    },
                    {
                        "name": "Mesuere B."
                    },
                    {
                        "name": "Van der Jeugt F."
                    }
                ],
                "date": "2022-12-01T00:00:00Z",
                "journal": "BMC Bioinformatics",
                "title": "FragGeneScanRs: faster gene prediction for short reads"
            },
            "pmcid": "PMC9148508",
            "pmid": "35643462"
        }
    ],
    "agentType": [
        "Command-line agent"
    ],
    "topic": [
        {
            "term": "Gene expression",
            "uri": "http://edamontology.org/topic_0203"
        },
        {
            "term": "Metagenomics",
            "uri": "http://edamontology.org/topic_3174"
        },
        {
            "term": "Protein expression",
            "uri": "http://edamontology.org/topic_0108"
        }
    ]
}
