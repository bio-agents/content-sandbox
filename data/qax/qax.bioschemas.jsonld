{
  "@context": {
    "bioagents": "https://bio.agents/ontology/",
    "bsc": "http://bioschemas.org/",
    "bsct": "http://bioschemas.org/types/",
    "dct": "http://purl.org/dc/terms/",
    "edam": "http://edamontology.org/",
    "owl": "http://www.w3.org/2002/07/owl#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "sc": "http://schema.org/",
    "xsd": "http://www.w3.org/2001/XMLSchema#"
  },
  "@graph": [
    {
      "@id": "https://bio.agents/qax",
      "@type": "sc:SoftwareApplication",
      "bioagents:primaryContact": "Andrea Telatin",
      "bsc:input": {
        "@id": "_:N0eceb58e08f0440dbda100ac44024a44"
      },
      "dct:conformsTo": "https://bioschemas.org/profiles/ComputationalAgent/0.6-DRAFT",
      "sc:additionalType": "Command-line agent",
      "sc:description": "Qiime2 artifacts are structured compressed archives containing a dataset (e.g., FASTQ reads, representative sequences in FASTA format, a phylogenetic tree in Newick format, etc.) and an exhaustive set of metadata (including the command that generated it, information on the execution environment, citations on the used software, and all the metadata of the artifacts used to produce it).\n\nWhile artifacts can improve the shareability and reproducibility of Qiime workflows, they are less easily integrated with general bioinformatics pipelines, and even accessing metadata in the artifacts requires the full Qiime2 installation (not to mention that every release of Qiime2 will produce incompatible artifacts). Qiime Artifact Extractor (qxa) allows to easily interface with Qiime2 artifacts from the command line, without needing the full Qiime2 environment installed.",
      "sc:featureList": {
        "@id": "edam:operation_1812"
      },
      "sc:isAccessibleForFree": true,
      "sc:license": "GPL-3.0",
      "sc:name": "Qiime Artifact eXtractor (qax)",
      "sc:softwareHelp": {
        "@id": "https://telatin.github.io/qax/"
      },
      "sc:softwareVersion": [
        "0.9",
        "0.5",
        "0.3"
      ],
      "sc:url": "https://github.com/telatin/qax"
    },
    {
      "@id": "_:N0eceb58e08f0440dbda100ac44024a44",
      "@type": "bsct:FormalParameter",
      "sc:additionalType": {
        "@id": "edam:data_2044"
      },
      "sc:encodingFormat": {
        "@id": "edam:format_3987"
      },
      "sc:name": "Sequence"
    }
  ]
}